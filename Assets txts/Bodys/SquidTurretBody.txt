SquidTurretBody

> transform = p:(29.5, -219.1, -45.5) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> RoR2.TeamComponent
>v hideAllyCardDisplay = False

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.CharacterBody
>v bodyIndex = 57
>v baseNameToken = SQUIDTURRET_BODY_NAME
>v subtitleNameToken = 
>v pendingTonicAfflictionCount = 0
>v bodyFlags = None
>v readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.CharacterBody]
>v rootMotionInMainState = False
>v mainRootSpeed = 0
>v baseMaxHealth = 300
>v baseRegen = 1
>v baseMaxShield = 0
>v baseMoveSpeed = 0
>v baseAcceleration = 0
>v baseJumpPower = 0
>v baseDamage = 20
>v baseAttackSpeed = 1
>v baseCrit = 0
>v baseArmor = 3
>v baseJumpCount = 1
>v autoCalculateLevelStats = True
>v levelMaxHealth = 90
>v levelRegen = 0.2
>v levelMaxShield = 0
>v levelMoveSpeed = 0
>v levelJumpPower = 0
>v levelDamage = 4
>v levelAttackSpeed = 0
>v levelCrit = 0
>v levelArmor = 0
>v killCount = 0
>v wasLucky = False
>v spreadBloomDecayTime = 0.45
>v spreadBloomCurve = UnityEngine.AnimationCurve
>v crosshairPrefab = 
>v hideCrosshair = False
>v aimOriginTransform = AimOrigin (UnityEngine.Transform)
>v hullClassification = Human
>v portraitIcon = 
>v isChampion = False
>v currentVehicle = 
>v preferredPodPrefab = 

> RoR2.HealthComponent
>v health = 100
>v shield = 0
>v barrier = 0
>v body = 
>v dontShowHealthbar = False
>v globalDeathEventChanceCoefficient = 1
>v medkitActivationDelay = 1.1
>v frozenExecuteThreshold = 0.3

> RoR2.InputBankTest
>v lookPitch = 0
>v lookYaw = 0
>v moveVector = (0.0, 0.0, 0.0)
>v skill1 = RoR2.InputBankTest+ButtonState
>v skill2 = RoR2.InputBankTest+ButtonState
>v skill3 = RoR2.InputBankTest+ButtonState
>v skill4 = RoR2.InputBankTest+ButtonState
>v interact = RoR2.InputBankTest+ButtonState
>v jump = RoR2.InputBankTest+ButtonState
>v sprint = RoR2.InputBankTest+ButtonState
>v activateEquipment = RoR2.InputBankTest+ButtonState
>v ping = RoR2.InputBankTest+ButtonState
>v emoteRequest = -1

> RoR2.CameraTargetParams
>v cameraParams = ccpStandard (RoR2.CharacterCameraParams)
>v cameraPivotTransform = 
>v aimMode = Standard
>v recoil = (0.0, 0.0)
>v idealLocalCameraPos = (0.0, 5.0, -10.0)
>v fovOverride = -1
>v dontRaycastToPivot = False

> RoR2.ModelLocator
>v modelTransform = mdlSquidTurret (UnityEngine.Transform)
>v modelBaseTransform = Model Base (UnityEngine.Transform)
>v dontReleaseModelOnDeath = False
>v autoUpdateModelTransform = True
>v dontDetatchFromParent = False
>v noCorpse = False
>v normalizeToFloor = False
>v preserveModel = False

> RoR2.EntityStateMachine
>v customName = Body
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.EntityStateMachine
>v customName = Weapon
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.GenericSkill
>v skillName = Turret
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 2
>v baseMaxStock = 40
>v rechargeStock = 1
>v isBullets = True
>v shootDelay = 0.1
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = SquidTurretBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Any
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = 
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.SkillLocator
>v primary = SquidTurretBody (RoR2.GenericSkill)
>v secondary = 
>v utility = 
>v special = 
>v passiveSkill = RoR2.SkillLocator+PassiveSkill

> RoR2.CharacterDeathBehavior
>v deathStateMachine = SquidTurretBody (RoR2.EntityStateMachine)
>v deathState = EntityStates.SerializableEntityStateType
>v idleStateMachine = RoR2.EntityStateMachine[]

> RoR2.Networking.CharacterNetworkTransform
>v positionTransmitInterval = 0.1
>v lastPositionTransmitTime = -Infinity
>v interpolationFactor = 2
>v newestNetSnapshot = RoR2.Networking.CharacterNetworkTransform+Snapshot
>v debugDuplicatePositions = False
>v debugSnapshotReceived = False

> RoR2.NetworkStateMachine

> RoR2.Interactor
>v maxInteractionDistance = 1

> RoR2.InteractionDriver
>v highlightInteractor = False
>v interactableOverride = 

> UnityEngine.CapsuleCollider
>c Model Base

>> transform = p:(0.0, -0.8, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c mdlSquidTurret

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(0.3, 0.3, 0.3)

>>> UnityEngine.Animator

>>> RoR2.AimAnimator
>>>v inputBank = SquidTurretBody (RoR2.InputBankTest)
>>>v directionComponent = 
>>>v pitchRangeMin = -90
>>>v pitchRangeMax = 90
>>>v yawRangeMin = -90
>>>v yawRangeMax = 90
>>>v pitchGiveupRange = 90
>>>v yawGiveupRange = 180
>>>v giveupDuration = 2
>>>v raisedApproachSpeed = 7200
>>>v loweredApproachSpeed = 7200
>>>v smoothTime = 0.2
>>>v fullYaw = False
>>>v aimType = Direct
>>>v enableAimWeight = False

>>> RoR2.CharacterModel
>>>v body = SquidTurretBody (RoR2.CharacterBody)
>>>v itemDisplayRuleSet = idrsSquidTurret (RoR2.ItemDisplayRuleSet)
>>>v autoPopulateLightInfos = True
>>>v autoPopulateParticleSystemInfos = True
>>>v baseParticleSystemInfos = RoR2.CharacterModel+ParticleSystemInfo[]
>>>v baseRendererInfos = RoR2.CharacterModel+RendererInfo[]
>>>v baseLightInfos = RoR2.CharacterModel+LightInfo[]
>>>v invisibilityCount = 0
>>>v temporaryOverlays = System.Collections.Generic.List`1[RoR2.TemporaryOverlay]
>>>v revealedMaterial = matRevealedEffect (UnityEngine.Material)
>>>v cloakedMaterial = matCloakedEffect (UnityEngine.Material)
>>>v ghostMaterial = matGhostEffect (UnityEngine.Material)
>>>v bellBuffMaterial = matBellBuff (UnityEngine.Material)
>>>v wolfhatMaterial = matWolfhatOverlay (UnityEngine.Material)
>>>v energyShieldMaterial = matEnergyShield (UnityEngine.Material)
>>>v fullCritMaterial = matFullCrit (UnityEngine.Material)
>>>v beetleJuiceMaterial = matBeetleJuice (UnityEngine.Material)
>>>v brittleMaterial = matBrittle (UnityEngine.Material)
>>>v clayGooMaterial = matClayGooDebuff (UnityEngine.Material)
>>>v slow80Material = matSlow80Debuff (UnityEngine.Material)
>>>v immuneMaterial = matImmune (UnityEngine.Material)
>>>v elitePoisonOverlayMaterial = matElitePoisonOverlay (UnityEngine.Material)
>>>v elitePoisonParticleReplacementMaterial = matElitePoisonParticleReplacement (UnityEngine.Material)
>>>v weakMaterial = matWeakOverlay (UnityEngine.Material)

>>> ChildLocator
>>>c Cube

>>>> transform = p:(-0.2, 1.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.MeshFilter

>>>> UnityEngine.MeshRenderer
>>>c SquidArmature

>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.7, 1.7, 1.7)
>>>>c Base

>>>>> transform = p:(0.0, 0.0, 0.0) r:(357.8, 359.0, 3.3) s:(1.0, 1.0, 1.0)
>>>>>c Head1

>>>>>> transform = p:(0.0, 1.9, 0.0) r:(5.2, 316.7, 4.2) s:(1.0, 1.0, 1.0)
>>>>>>c Head2

>>>>>>> transform = p:(0.0, 1.7, 0.0) r:(16.2, 271.2, 341.7) s:(1.0, 1.0, 1.0)
>>>>>>>c Head3

>>>>>>>> transform = p:(0.0, 1.8, 0.0) r:(3.7, 257.5, 352.5) s:(1.0, 1.0, 1.0)
>>>>>>>>c Ear.l

>>>>>>>>> transform = p:(-0.4, 0.9, 0.1) r:(354.5, 267.3, 85.4) s:(1.0, 1.0, 1.0)
>>>>>>>>>c Ear.l_end

>>>>>>>>>> transform = p:(0.0, 1.0, 0.0) r:(354.5, 267.3, 85.4) s:(1.0, 1.0, 1.0)
>>>>>>>>c Ear.r

>>>>>>>>> transform = p:(0.7, 0.8, -0.2) r:(340.9, 54.7, 113.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>c Ear.r_end

>>>>>>>>>> transform = p:(0.0, 0.9, 0.0) r:(340.9, 54.7, 113.7) s:(1.0, 1.0, 1.0)
>>>>>>>>c Muzzle

>>>>>>>>> transform = p:(0.1, 1.2, 0.3) r:(5.7, 274.0, 353.8) s:(1.0, 1.0, 1.0)
>>>>>c Tooth.l

>>>>>> transform = p:(-0.3, 1.3, 0.1) r:(0.0, 0.0, 190.6) s:(1.0, 1.0, 1.0)
>>>>>>c Tooth.l_end

>>>>>>> transform = p:(0.0, 1.7, 0.0) r:(0.0, 0.0, 190.6) s:(1.0, 1.0, 1.0)
>>>>>c Tooth.r

>>>>>> transform = p:(0.5, 1.2, 0.1) r:(0.0, 0.0, 177.9) s:(1.0, 1.0, 1.0)
>>>>>>c Tooth.r_end

>>>>>>> transform = p:(0.0, 1.5, 0.0) r:(0.0, 0.0, 177.9) s:(1.0, 1.0, 1.0)
>>>c SquidMesh

>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.SkinnedMeshRenderer
>>c AimOrigin

>>> transform = p:(0.0, 3.2, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
