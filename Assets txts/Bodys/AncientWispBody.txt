AncientWispBody

> transform = p:(53.1, -189.6, -39.8) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.CharacterBody
>v bodyIndex = 1
>v baseNameToken = ANCIENTWISP_BODY_NAME
>v subtitleNameToken = 
>v pendingTonicAfflictionCount = 0
>v bodyFlags = None
>v readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.CharacterBody]
>v rootMotionInMainState = False
>v mainRootSpeed = 0
>v baseMaxHealth = 1650
>v baseRegen = 0
>v baseMaxShield = 0
>v baseMoveSpeed = 7
>v baseAcceleration = 28
>v baseJumpPower = 0
>v baseDamage = 65
>v baseAttackSpeed = 1
>v baseCrit = 0
>v baseArmor = 0
>v baseJumpCount = 1
>v autoCalculateLevelStats = True
>v levelMaxHealth = 495
>v levelRegen = 0
>v levelMaxShield = 0
>v levelMoveSpeed = 0
>v levelJumpPower = 0
>v levelDamage = 13
>v levelAttackSpeed = 0
>v levelCrit = 0
>v levelArmor = 0
>v killCount = 0
>v wasLucky = False
>v spreadBloomDecayTime = 0.45
>v spreadBloomCurve = UnityEngine.AnimationCurve
>v crosshairPrefab = 
>v hideCrosshair = False
>v aimOriginTransform = AncientWispBody (UnityEngine.Transform)
>v hullClassification = Golem
>v portraitIcon = 
>v isChampion = True
>v currentVehicle = 
>v preferredPodPrefab = 

> RoR2.HealthComponent
>v health = 100
>v shield = 0
>v barrier = 0
>v body = 
>v dontShowHealthbar = False
>v globalDeathEventChanceCoefficient = 1
>v medkitActivationDelay = 1.1
>v frozenExecuteThreshold = 0.3

> RoR2.InputBankTest
>v lookPitch = 0
>v lookYaw = 0
>v moveVector = (0.0, 0.0, 0.0)
>v skill1 = RoR2.InputBankTest+ButtonState
>v skill2 = RoR2.InputBankTest+ButtonState
>v skill3 = RoR2.InputBankTest+ButtonState
>v skill4 = RoR2.InputBankTest+ButtonState
>v interact = RoR2.InputBankTest+ButtonState
>v jump = RoR2.InputBankTest+ButtonState
>v sprint = RoR2.InputBankTest+ButtonState
>v activateEquipment = RoR2.InputBankTest+ButtonState
>v ping = RoR2.InputBankTest+ButtonState
>v emoteRequest = -1

> RoR2.CameraTargetParams
>v cameraParams = ccpStandard (RoR2.CharacterCameraParams)
>v cameraPivotTransform = 
>v aimMode = Standard
>v recoil = (0.0, 0.0)
>v idealLocalCameraPos = (0.0, 11.0, -23.0)
>v fovOverride = -1
>v dontRaycastToPivot = False

> RoR2.Networking.CharacterNetworkTransform
>v positionTransmitInterval = 0.1
>v lastPositionTransmitTime = -Infinity
>v interpolationFactor = 2
>v newestNetSnapshot = RoR2.Networking.CharacterNetworkTransform+Snapshot
>v debugDuplicatePositions = False
>v debugSnapshotReceived = False

> RoR2.RigidbodyDirection
>v aimDirection = (1.0, 1.0, 1.0)
>v rigid = AncientWispBody (UnityEngine.Rigidbody)
>v angularVelocityPID = AncientWispBody (QuaternionPID)
>v torquePID = AncientWispBody (VectorPID)
>v freezeXRotation = True
>v freezeYRotation = False
>v freezeZRotation = True
>v animatorXCycle = 
>v animatorYCycle = 
>v animatorZCycle = 
>v animatorTorqueScale = 0

> RoR2.RigidbodyMotor
>v moveVector = (0.0, 0.0, 0.0)
>v rigid = AncientWispBody (UnityEngine.Rigidbody)
>v forcePID = AncientWispBody (VectorPID)
>v centerOfMassOffset = (0.0, 0.0, 0.0)
>v animatorForward = 
>v animatorRight = 
>v animatorUp = 
>v enableOverrideMoveVectorInLocalSpace = False
>v canTakeImpactDamage = True
>v overrideMoveVectorInLocalSpace = (0.0, 0.0, 0.0)

> QuaternionPID
>v customName = Angular Velocity PID
>v PID = (2.0, 1.0, 0.0)
>v inputQuat = (0.0, 0.0, 0.0, 1.0)
>v targetQuat = (0.0, 0.0, 0.0, 1.0)
>v outputVector = (0.0, 0.0, 0.0)
>v gain = 1

> VectorPID
>v customName = torquePID
>v PID = (2.0, 1.0, 0.0)
>v inputVector = (0.0, 0.0, 0.0)
>v targetVector = (0.0, 0.0, 0.0)
>v outputVector = (0.0, 0.0, 0.0)
>v isAngle = True
>v gain = 3

> VectorPID
>v customName = Force PID
>v PID = (3.0, 0.0, 0.0)
>v inputVector = (0.0, 0.0, 0.0)
>v targetVector = (0.0, 0.0, 0.0)
>v outputVector = (0.0, 0.0, 0.0)
>v isAngle = False
>v gain = 1

> RoR2.TeamComponent
>v hideAllyCardDisplay = False

> RoR2.EntityStateMachine
>v customName = Body
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.EntityStateMachine
>v customName = Weapon
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.SkillLocator
>v primary = AncientWispBody (RoR2.GenericSkill)
>v secondary = AncientWispBody (RoR2.GenericSkill)
>v utility = AncientWispBody (RoR2.GenericSkill)
>v special = 
>v passiveSkill = RoR2.SkillLocator+PassiveSkill

> RoR2.GenericSkill
>v skillName = Rain
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 30
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = AncientWispBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Any
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = 
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.GenericSkill
>v skillName = RHCanon
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 0
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = AncientWispBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Any
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = 
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.GenericSkill
>v skillName = Enrage
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 10
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = AncientWispBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = PrioritySkill
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = 
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.Interactor
>v maxInteractionDistance = 3

> RoR2.InteractionDriver
>v highlightInteractor = False
>v interactableOverride = 

> RoR2.ModelLocator
>v modelTransform = mdlAncientWisp (UnityEngine.Transform)
>v modelBaseTransform = Model Base? (UnityEngine.Transform)
>v dontReleaseModelOnDeath = False
>v autoUpdateModelTransform = True
>v dontDetatchFromParent = False
>v noCorpse = False
>v normalizeToFloor = False
>v preserveModel = False

> RoR2.NetworkStateMachine

> RoR2.CharacterDeathBehavior
>v deathStateMachine = AncientWispBody (RoR2.EntityStateMachine)
>v deathState = EntityStates.SerializableEntityStateType
>v idleStateMachine = RoR2.EntityStateMachine[]

> RoR2.DeathRewards
>v expReward = 0
>v logUnlockableName = 
>v bossPickup = RoR2.SerializablePickupIndex

> UnityEngine.Rigidbody

> UnityEngine.CapsuleCollider

> RoR2.EquipmentSlot
>v equipmentActivateString = Play_UI_equipment_activate
>c Model Base?

>> transform = p:(0.0, -3.5, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c mdlAncientWisp

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(3.0, 3.0, 3.0)

>>> UnityEngine.Animator

>>> RoR2.AimAnimator
>>>v inputBank = AncientWispBody (RoR2.InputBankTest)
>>>v directionComponent = 
>>>v pitchRangeMin = -40
>>>v pitchRangeMax = 40
>>>v yawRangeMin = -180
>>>v yawRangeMax = 180
>>>v pitchGiveupRange = 10
>>>v yawGiveupRange = 10
>>>v giveupDuration = 3
>>>v raisedApproachSpeed = 720
>>>v loweredApproachSpeed = 360
>>>v smoothTime = 0.1
>>>v fullYaw = True
>>>v aimType = Direct
>>>v enableAimWeight = False

>>> ChildLocator

>>> RoR2.HurtBoxGroup
>>>v hurtBoxes = RoR2.HurtBox[]
>>>v mainHurtBox = Hurtbox (RoR2.HurtBox)
>>>v bullseyeCount = 1

>>> RoR2.CharacterModel
>>>v body = AncientWispBody (RoR2.CharacterBody)
>>>v itemDisplayRuleSet = idrsAncientWisp (RoR2.ItemDisplayRuleSet)
>>>v autoPopulateLightInfos = True
>>>v autoPopulateParticleSystemInfos = True
>>>v baseParticleSystemInfos = RoR2.CharacterModel+ParticleSystemInfo[]
>>>v baseRendererInfos = RoR2.CharacterModel+RendererInfo[]
>>>v baseLightInfos = RoR2.CharacterModel+LightInfo[]
>>>v invisibilityCount = 0
>>>v temporaryOverlays = System.Collections.Generic.List`1[RoR2.TemporaryOverlay]
>>>v revealedMaterial = matRevealedEffect (UnityEngine.Material)
>>>v cloakedMaterial = matCloakedEffect (UnityEngine.Material)
>>>v ghostMaterial = matGhostEffect (UnityEngine.Material)
>>>v bellBuffMaterial = matBellBuff (UnityEngine.Material)
>>>v wolfhatMaterial = matWolfhatOverlay (UnityEngine.Material)
>>>v energyShieldMaterial = matEnergyShield (UnityEngine.Material)
>>>v fullCritMaterial = matFullCrit (UnityEngine.Material)
>>>v beetleJuiceMaterial = matBeetleJuice (UnityEngine.Material)
>>>v brittleMaterial = matBrittle (UnityEngine.Material)
>>>v clayGooMaterial = matClayGooDebuff (UnityEngine.Material)
>>>v slow80Material = matSlow80Debuff (UnityEngine.Material)
>>>v immuneMaterial = matImmune (UnityEngine.Material)
>>>v elitePoisonOverlayMaterial = matElitePoisonOverlay (UnityEngine.Material)
>>>v elitePoisonParticleReplacementMaterial = matElitePoisonParticleReplacement (UnityEngine.Material)
>>>v weakMaterial = matWeakOverlay (UnityEngine.Material)

>>> RoR2.AncientWispFireController
>>>v normalParticles = Fire, Main (UnityEngine.ParticleSystem)
>>>v normalLight = Point light (UnityEngine.Light)
>>>v rageParticles = Fire, Enrage (UnityEngine.ParticleSystem)
>>>v rageLight = Point light (UnityEngine.Light)
>>>c AncientWispArmature

>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c chest

>>>>> transform = p:(0.0, 0.1, 1.9) r:(0.0, 90.0, 173.2) s:(1.0, 1.0, 1.0)
>>>>>c ChestCannon1

>>>>>> transform = p:(0.1, -0.1, 0.0) r:(6.8, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>c ChestCannonGuard1

>>>>>>> transform = p:(0.0, -0.1, -0.1) r:(18.1, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>>c ChestCannonGuard1_end

>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(18.1, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>c ChestCannon2

>>>>>> transform = p:(-0.1, -0.1, 0.0) r:(6.8, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>c ChestCannonGuard2

>>>>>>> transform = p:(0.0, -0.1, 0.1) r:(343.5, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>>c ChestCannonGuard2_end

>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(343.5, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>c Fire, Main

>>>>>> transform = p:(-0.3, 1.6, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>> UnityEngine.ParticleSystem

>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>>c Point light

>>>>>>> transform = p:(0.0, 0.2, 0.9) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.Light
>>>>>c Fire, Enrage

>>>>>> transform = p:(-0.3, 1.6, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>> UnityEngine.ParticleSystem

>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>>c Point light

>>>>>>> transform = p:(0.0, 0.2, 0.9) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.Light
>>>>c footIKPole.l

>>>>> transform = p:(-0.4, -0.7, 0.7) r:(0.0, 270.0, 270.0) s:(1.0, 1.0, 1.0)
>>>>>c footIKPole.l_end

>>>>>> transform = p:(0.0, 0.3, 0.0) r:(0.0, 270.0, 270.0) s:(1.0, 1.0, 1.0)
>>>>c footIKPole.r

>>>>> transform = p:(0.3, -0.7, 0.7) r:(0.0, 90.0, 90.0) s:(1.0, 1.0, 1.0)
>>>>>c footIKPole.r_end

>>>>>> transform = p:(0.0, 0.3, 0.0) r:(0.0, 90.0, 90.0) s:(1.0, 1.0, 1.0)
>>>>c footIKTarget.l

>>>>> transform = p:(-0.3, 0.1, 0.1) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c footIKTarget.l_end

>>>>>> transform = p:(0.0, 0.3, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c footIKTarget.r

>>>>> transform = p:(0.3, 0.1, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c footIKTarget.r_end

>>>>>> transform = p:(0.0, 0.3, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c handIKPole.l

>>>>> transform = p:(-1.0, 0.3, 1.3) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c handIKPole.l_end

>>>>>> transform = p:(0.0, 0.3, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c handIKPole.r

>>>>> transform = p:(1.0, 0.2, 1.3) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c handIKPole.r_end

>>>>>> transform = p:(0.0, 0.3, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c handIKTarget.l

>>>>> transform = p:(-0.7, 0.0, 0.6) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c handIKTarget.l_end

>>>>>> transform = p:(0.0, 0.3, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c handIKTarget.r

>>>>> transform = p:(0.6, 0.0, 0.6) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c handIKTarget.r_end

>>>>>> transform = p:(0.0, 0.3, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c Head

>>>>> transform = p:(0.0, 0.1, 2.2) r:(3.7, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c Head_end

>>>>>> transform = p:(0.0, 0.4, 0.0) r:(3.7, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c GameObject

>>>>>> transform = p:(0.0, 0.2, 0.5) r:(3.7, 0.0, 0.0) s:(2.0, 2.0, 2.0)

>>>>>> UnityEngine.SpriteRenderer

>>>>>> RoR2.EyeFlare
>>>>>>v directionSource = Head (UnityEngine.Transform)
>>>>>>v localScale = 2
>>>>c shoulder.l

>>>>> transform = p:(-0.4, 0.1, 2.0) r:(2.5, 346.9, 135.6) s:(1.0, 1.0, 1.0)
>>>>>c upperArm1.l

>>>>>> transform = p:(-0.1, 0.4, 0.0) r:(2.5, 347.3, 151.2) s:(1.0, 1.0, 1.0)
>>>>>>c upperArm2.l

>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(0.0, 348.7, 171.3) s:(1.0, 1.0, 1.0)
>>>>>>>c lowerArm.l

>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(14.3, 168.4, 169.6) s:(1.0, 1.0, 1.0)
>>>>>>>>c finger1.l

>>>>>>>>> transform = p:(-0.1, 0.8, -0.1) r:(345.6, 81.4, 173.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>c finger1.l_end

>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(345.6, 81.4, 173.6) s:(1.0, 1.0, 1.0)
>>>>>>>>c finger2.l

>>>>>>>>> transform = p:(-0.1, 0.8, 0.1) r:(345.7, 81.4, 169.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>c finger2.l_end

>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(345.7, 81.4, 169.3) s:(1.0, 1.0, 1.0)
>>>>>>>>c thumb.l

>>>>>>>>> transform = p:(0.1, 0.8, 0.0) r:(359.9, 78.8, 173.1) s:(1.0, 1.0, 1.0)
>>>>>>>>>c thumb.l_end

>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(359.9, 78.8, 173.1) s:(1.0, 1.0, 1.0)
>>>>>>>>c MuzzleLeft

>>>>>>>>> transform = p:(0.0, 0.9, 0.0) r:(72.4, 24.8, 35.2) s:(1.0, 1.0, 1.0)
>>>>c shoulder.r

>>>>> transform = p:(0.4, 0.1, 2.1) r:(2.9, 8.5, 221.4) s:(1.0, 1.0, 1.0)
>>>>>c upperArm1.r

>>>>>> transform = p:(0.1, 0.4, 0.0) r:(2.9, 8.1, 206.1) s:(1.0, 1.0, 1.0)
>>>>>>c RightSwingCenter

>>>>>>> transform = p:(0.0, -0.4, 0.0) r:(2.9, 8.5, 221.4) s:(1.0, 1.0, 1.0)
>>>>>>c upperArm2.r

>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(0.7, 7.0, 187.1) s:(1.0, 1.0, 1.0)
>>>>>>>c lowerArm.r

>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(13.0, 187.6, 190.5) s:(1.0, 1.0, 1.0)
>>>>>>>>c finger1.r

>>>>>>>>> transform = p:(0.1, 0.8, -0.1) r:(14.6, 94.8, 175.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>c finger1.r_end

>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(14.6, 94.8, 175.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c finger2.r

>>>>>>>>> transform = p:(0.1, 0.8, 0.1) r:(14.4, 94.2, 170.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>c finger2.r_end

>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(14.4, 94.2, 170.6) s:(1.0, 1.0, 1.0)
>>>>>>>>c thumb.r

>>>>>>>>> transform = p:(-0.1, 0.8, 0.0) r:(0.1, 95.3, 174.4) s:(1.0, 1.0, 1.0)
>>>>>>>>>c thumb.r_end

>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(0.1, 95.3, 174.4) s:(1.0, 1.0, 1.0)
>>>>>>>>c MuzzleRight

>>>>>>>>> transform = p:(0.0, 0.9, 0.0) r:(73.4, 327.9, 321.5) s:(1.0, 1.0, 1.0)
>>>>c thigh.l

>>>>> transform = p:(-0.3, 0.1, 1.0) r:(359.9, 84.6, 135.2) s:(1.0, 1.0, 1.0)
>>>>>c calf.l

>>>>>> transform = p:(-0.1, 0.4, 0.0) r:(338.6, 174.7, 179.9) s:(1.0, 1.0, 1.0)
>>>>>>c toe1.l

>>>>>>> transform = p:(0.0, 0.6, -0.1) r:(348.1, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>>c toe1.l_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(348.1, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>c toe2.l

>>>>>>> transform = p:(0.0, 0.6, 0.1) r:(8.1, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>>c toe2.l_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(8.1, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>c thigh.r

>>>>> transform = p:(0.3, 0.1, 0.9) r:(359.9, 273.8, 211.9) s:(1.0, 1.0, 1.0)
>>>>>c calf.r

>>>>>> transform = p:(0.1, 0.4, 0.0) r:(346.4, 183.7, 180.1) s:(1.0, 1.0, 1.0)
>>>>>>c toe1.r

>>>>>>> transform = p:(0.0, 0.6, -0.1) r:(341.3, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>>c toe1.r_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(341.3, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>c toe2.r

>>>>>>> transform = p:(0.0, 0.6, 0.1) r:(15.3, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>>c toe2.r_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(15.3, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>c AncientWispMesh

>>>> transform = p:(0.0, 1.5, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.SkinnedMeshRenderer
>>>c Hurtbox

>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> RoR2.HurtBox
>>>>v healthComponent = AncientWispBody (RoR2.HealthComponent)
>>>>v isBullseye = True
>>>>v damageModifier = Normal
>>>>v teamIndex = None
>>>>v hurtBoxGroup = mdlAncientWisp (RoR2.HurtBoxGroup)
>>>>v indexInGroup = 0
>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]

>>>> UnityEngine.CapsuleCollider
