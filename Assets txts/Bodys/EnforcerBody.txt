EnforcerBody

> transform = p:(249.9, 65.5, 447.5) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.CharacterMotor
>v instancesList = System.Collections.Generic.List`1[RoR2.CharacterMotor]
>v walkSpeedPenaltyCoefficient = 1
>v characterDirection = 
>v muteWalkMotion = False
>v mass = 100
>v airControl = 0.25
>v disableAirControlUntilCollision = False
>v generateParametersOnAwake = True
>v slipStartAngle = 70
>v slipEndAngle = 55
>v jumpCount = 0
>v netIsGrounded = False
>v netGroundNormal = (0.0, 0.0, 0.0)
>v velocity = (0.0, 0.0, 0.0)
>v rootMotion = (0.0, 0.0, 0.0)

> RoR2.InputBankTest
>v lookPitch = 0
>v lookYaw = 0
>v moveVector = (0.0, 0.0, 0.0)
>v skill1 = RoR2.InputBankTest+ButtonState
>v skill2 = RoR2.InputBankTest+ButtonState
>v skill3 = RoR2.InputBankTest+ButtonState
>v skill4 = RoR2.InputBankTest+ButtonState
>v interact = RoR2.InputBankTest+ButtonState
>v jump = RoR2.InputBankTest+ButtonState
>v sprint = RoR2.InputBankTest+ButtonState
>v activateEquipment = RoR2.InputBankTest+ButtonState
>v ping = RoR2.InputBankTest+ButtonState
>v emoteRequest = -1

> RoR2.CharacterBody
>v bodyIndex = 23
>v baseNameToken = ENFORCER_BODY_NAME
>v subtitleNameToken = 
>v pendingTonicAfflictionCount = 0
>v bodyFlags = None
>v readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.CharacterBody]
>v rootMotionInMainState = False
>v mainRootSpeed = 0
>v baseMaxHealth = 60
>v baseRegen = 0.6
>v baseMaxShield = 0
>v baseMoveSpeed = 7.5
>v baseAcceleration = 80
>v baseJumpPower = 12
>v baseDamage = 12
>v baseAttackSpeed = 1
>v baseCrit = 1
>v baseArmor = 0
>v baseJumpCount = 1
>v autoCalculateLevelStats = True
>v levelMaxHealth = 18
>v levelRegen = 0.12
>v levelMaxShield = 0
>v levelMoveSpeed = 0
>v levelJumpPower = 0
>v levelDamage = 2.4
>v levelAttackSpeed = 0
>v levelCrit = 0
>v levelArmor = 0
>v killCount = 0
>v wasLucky = False
>v spreadBloomDecayTime = 0.45
>v spreadBloomCurve = UnityEngine.AnimationCurve
>v crosshairPrefab = 
>v hideCrosshair = False
>v aimOriginTransform = AimOrigin (UnityEngine.Transform)
>v hullClassification = Human
>v portraitIcon = texNullIcon (UnityEngine.Texture2D)
>v isChampion = False
>v currentVehicle = 
>v preferredPodPrefab = 

> RoR2.CameraTargetParams
>v cameraParams = ccpStandard (RoR2.CharacterCameraParams)
>v cameraPivotTransform = 
>v aimMode = Standard
>v recoil = (0.0, 0.0)
>v idealLocalCameraPos = (0.0, 0.0, 0.0)
>v fovOverride = -1
>v dontRaycastToPivot = False

> RoR2.ModelLocator
>v modelTransform = mdlCommandoDualies (1) (UnityEngine.Transform)
>v modelBaseTransform = 
>v dontReleaseModelOnDeath = False
>v autoUpdateModelTransform = True
>v dontDetatchFromParent = False
>v noCorpse = False
>v normalizeToFloor = False
>v preserveModel = False

> RoR2.EntityStateMachine
>v customName = Body
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.CharacterDirection
>v moveVector = (0.0, 0.0, 0.0)
>v targetTransform = ModelBase (UnityEngine.Transform)
>v overrideAnimatorForwardTransform = 
>v rootMotionAccumulator = 
>v modelAnimator = 
>v driveFromRootRotation = False
>v turnSpeed = 720

> RoR2.EntityStateMachine
>v customName = Weapon
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.GenericSkill
>v skillName = FirePistol
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 1.5
>v baseMaxStock = 6
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.8
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = EnforcerBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Any
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = texCommandoSkill1Icon (UnityEngine.Sprite)
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.GenericSkill
>v skillName = FireFMJ
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 1
>v baseMaxStock = 12
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = EnforcerBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Any
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = texCommandoSkill2Icon (UnityEngine.Sprite)
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.GenericSkill
>v skillName = Roll
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 2.5
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = EnforcerBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Skill
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = texCommandoSkill3Icon (UnityEngine.Sprite)
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.GenericSkill
>v skillName = FireBarrage
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 5
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.08
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = EnforcerBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Skill
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = texCommandoSkill4Icon (UnityEngine.Sprite)
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.SkillLocator
>v primary = EnforcerBody (RoR2.GenericSkill)
>v secondary = EnforcerBody (RoR2.GenericSkill)
>v utility = EnforcerBody (RoR2.GenericSkill)
>v special = EnforcerBody (RoR2.GenericSkill)
>v passiveSkill = RoR2.SkillLocator+PassiveSkill

> RoR2.TeamComponent
>v hideAllyCardDisplay = False

> RoR2.HealthComponent
>v health = 100
>v shield = 0
>v barrier = 0
>v body = 
>v dontShowHealthbar = False
>v globalDeathEventChanceCoefficient = 1
>v medkitActivationDelay = 1.1
>v frozenExecuteThreshold = 0.3

> RoR2.Interactor
>v maxInteractionDistance = 3

> RoR2.InteractionDriver
>v highlightInteractor = False
>v interactableOverride = 

> RoR2.CharacterDeathBehavior
>v deathStateMachine = EnforcerBody (RoR2.EntityStateMachine)
>v deathState = EntityStates.SerializableEntityStateType
>v idleStateMachine = RoR2.EntityStateMachine[]

> RoR2.Networking.CharacterNetworkTransform
>v positionTransmitInterval = 0.05
>v lastPositionTransmitTime = -Infinity
>v interpolationFactor = 3
>v newestNetSnapshot = RoR2.Networking.CharacterNetworkTransform+Snapshot
>v debugDuplicatePositions = False
>v debugSnapshotReceived = False

> RoR2.NetworkStateMachine

> RoR2.CharacterEmoteDefinitions
>v emoteDefinitions = RoR2.CharacterEmoteDefinitions+EmoteDef[]

> RoR2.SfxLocator
>v deathSound = Play_ui_player_death
>v barkSound = 
>v openSound = 
>v landingSound = 
>v fallDamageSound = 

> UnityEngine.Rigidbody

> UnityEngine.CapsuleCollider

> KinematicCharacterController.KinematicCharacterMotor
>v CharacterController = EnforcerBody (RoR2.CharacterMotor)
>v Capsule = EnforcerBody (UnityEngine.CapsuleCollider)
>v Rigidbody = EnforcerBody (UnityEngine.Rigidbody)
>v DetectDiscreteCollisions = False
>v GroundDetectionExtraDistance = 0
>v MaxStepHeight = 0.2
>v MinRequiredStepDepth = 0.1
>v MaxStableSlopeAngle = 55
>v MaxStableDistanceFromLedge = 0.5
>v PreventSnappingOnLedges = False
>v MaxStableDenivelationAngle = 55
>v RigidbodyInteractionType = None
>v PreserveAttachedRigidbodyMomentum = True
>v HasPlanarConstraint = False
>v PlanarConstraintAxis = (0.0, 0.0, 1.0)
>v StepHandling = Standard
>v LedgeHandling = True
>v InteractiveRigidbodyHandling = True
>v SafeMovement = False
>v GroundingStatus = KinematicCharacterController.CharacterGroundingReport
>v LastGroundingStatus = KinematicCharacterController.CharacterTransientGroundingReport
>v CollidableLayers = UnityEngine.LayerMask
>v MaxHitsBudget = 16
>v MaxCollisionBudget = 16
>v MaxGroundingSweepIterations = 2
>v MaxMovementSweepIterations = 6
>v MaxSteppingSweepIterations = 3
>v MaxRigidbodyOverlapsCount = 16
>v MaxDiscreteCollisionIterations = 3
>v CollisionOffset = 0.001
>v GroundProbeReboundDistance = 0.02
>v MinimumGroundProbingDistance = 0.005
>v GroundProbingBackstepDistance = 0.1
>v SweepProbingBackstepDistance = 0.002
>v SecondaryProbesVertical = 0.02
>v SecondaryProbesHorizontal = 0.001
>v MinVelocityMagnitude = 0.01
>v SteppingForwardDistance = 0.03
>v MinDistanceForLedge = 0.05
>v CorrelationForVerticalObstruction = 0.01
>v ExtraSteppingForwardDistance = 0.01
>v ExtraStepHeightPadding = 0.01
>c ModelBase

>> transform = p:(0.0, -1.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c mdlCommandoDualies (1)

>>> transform = p:(0.0, 0.1, 0.0) r:(0.0, 0.0, 0.0) s:(0.1, 0.1, 0.1)

>>> UnityEngine.Animator

>>> RoR2.AimAnimator
>>>v inputBank = EnforcerBody (RoR2.InputBankTest)
>>>v directionComponent = EnforcerBody (RoR2.CharacterDirection)
>>>v pitchRangeMin = -60
>>>v pitchRangeMax = 60
>>>v yawRangeMin = -60
>>>v yawRangeMax = 60
>>>v pitchGiveupRange = 40
>>>v yawGiveupRange = 40
>>>v giveupDuration = 1.5
>>>v raisedApproachSpeed = 720
>>>v loweredApproachSpeed = 360
>>>v smoothTime = 0.1
>>>v fullYaw = False
>>>v aimType = Direct
>>>v enableAimWeight = False

>>> UnityEngine.Rigidbody

>>> ChildLocator

>>> RoR2.CharacterModel
>>>v body = EnforcerBody (RoR2.CharacterBody)
>>>v itemDisplayRuleSet = idrsCommando (RoR2.ItemDisplayRuleSet)
>>>v autoPopulateLightInfos = True
>>>v autoPopulateParticleSystemInfos = True
>>>v baseParticleSystemInfos = RoR2.CharacterModel+ParticleSystemInfo[]
>>>v baseRendererInfos = RoR2.CharacterModel+RendererInfo[]
>>>v baseLightInfos = RoR2.CharacterModel+LightInfo[]
>>>v invisibilityCount = 0
>>>v temporaryOverlays = System.Collections.Generic.List`1[RoR2.TemporaryOverlay]
>>>v revealedMaterial = matRevealedEffect (UnityEngine.Material)
>>>v cloakedMaterial = matCloakedEffect (UnityEngine.Material)
>>>v ghostMaterial = matGhostEffect (UnityEngine.Material)
>>>v bellBuffMaterial = matBellBuff (UnityEngine.Material)
>>>v wolfhatMaterial = matWolfhatOverlay (UnityEngine.Material)
>>>v energyShieldMaterial = matEnergyShield (UnityEngine.Material)
>>>v fullCritMaterial = matFullCrit (UnityEngine.Material)
>>>v beetleJuiceMaterial = matBeetleJuice (UnityEngine.Material)
>>>v brittleMaterial = matBrittle (UnityEngine.Material)
>>>v clayGooMaterial = matClayGooDebuff (UnityEngine.Material)
>>>v slow80Material = matSlow80Debuff (UnityEngine.Material)
>>>v immuneMaterial = matImmune (UnityEngine.Material)
>>>v elitePoisonOverlayMaterial = matElitePoisonOverlay (UnityEngine.Material)
>>>v elitePoisonParticleReplacementMaterial = matElitePoisonParticleReplacement (UnityEngine.Material)
>>>v weakMaterial = matWeakOverlay (UnityEngine.Material)

>>> RoR2.HurtBoxGroup
>>>v hurtBoxes = RoR2.HurtBox[]
>>>v mainHurtBox = HurtBox (RoR2.HurtBox)
>>>v bullseyeCount = 1
>>>c CommandoArmature

>>>> transform = p:(0.0, 0.0, 0.1) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c ROOT

>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.3) s:(1.0, 1.0, 1.0)
>>>>>c base

>>>>>> transform = p:(0.1, 9.0, -2.6) r:(90.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c IKArmTarget.l

>>>>>>> transform = p:(-7.8, 2.3, -2.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>c IKArmPole.l

>>>>>>>> transform = p:(-7.0, 5.4, 0.9) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c IKArmPole.l_end

>>>>>>>>> transform = p:(0.0, 1.2, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c IKArmTarget.r

>>>>>>> transform = p:(7.8, 2.3, -2.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>c IKArmPole.r

>>>>>>>> transform = p:(7.0, 5.4, 0.9) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c IKArmPole.r_end

>>>>>>>>> transform = p:(0.0, 1.2, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c pelvis

>>>>>>> transform = p:(0.0, 2.5, 0.0) r:(0.0, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>>c HurtBox

>>>>>>>> transform = p:(0.0, -0.7, 0.0) r:(0.0, 180.0, 180.0) s:(3.3, 2.0, 1.8)

>>>>>>>> UnityEngine.BoxCollider

>>>>>>>> RoR2.HurtBox
>>>>>>>>v healthComponent = EnforcerBody (RoR2.HealthComponent)
>>>>>>>>v isBullseye = False
>>>>>>>>v damageModifier = Normal
>>>>>>>>v teamIndex = None
>>>>>>>>v hurtBoxGroup = mdlCommandoDualies (1) (RoR2.HurtBoxGroup)
>>>>>>>>v indexInGroup = 0
>>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>>>>>c thigh.l

>>>>>>>> transform = p:(-0.9, 1.0, 0.1) r:(352.9, 351.9, 173.2) s:(1.0, 1.0, 1.0)
>>>>>>>>c HurtBox

>>>>>>>>> transform = p:(0.2, 0.7, 0.1) r:(352.9, 351.9, 173.2) s:(1.7, 4.7, 1.7)

>>>>>>>>> UnityEngine.BoxCollider

>>>>>>>>> RoR2.HurtBox
>>>>>>>>>v healthComponent = EnforcerBody (RoR2.HealthComponent)
>>>>>>>>>v isBullseye = False
>>>>>>>>>v damageModifier = Normal
>>>>>>>>>v teamIndex = None
>>>>>>>>>v hurtBoxGroup = mdlCommandoDualies (1) (RoR2.HurtBoxGroup)
>>>>>>>>>v indexInGroup = 1
>>>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>>>>>>c calf.l

>>>>>>>>> transform = p:(0.0, 3.8, 0.0) r:(355.8, 171.8, 187.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>c HurtBox

>>>>>>>>>> transform = p:(-0.2, 2.3, -0.1) r:(355.8, 171.8, 187.3) s:(1.1, 4.1, 1.0)

>>>>>>>>>> UnityEngine.BoxCollider

>>>>>>>>>> RoR2.HurtBox
>>>>>>>>>>v healthComponent = EnforcerBody (RoR2.HealthComponent)
>>>>>>>>>>v isBullseye = False
>>>>>>>>>>v damageModifier = Normal
>>>>>>>>>>v teamIndex = None
>>>>>>>>>>v hurtBoxGroup = mdlCommandoDualies (1) (RoR2.HurtBoxGroup)
>>>>>>>>>>v indexInGroup = 2
>>>>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>>>>>>>c foot.l

>>>>>>>>>> transform = p:(0.0, 4.1, 0.0) r:(89.1, 359.9, 359.9) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c toe.l

>>>>>>>>>>> transform = p:(0.0, 1.0, 0.0) r:(270.0, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c toe.l_end

>>>>>>>>>>>> transform = p:(0.0, 0.7, 0.0) r:(270.0, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>c thigh.r

>>>>>>>> transform = p:(0.9, 1.0, 0.1) r:(353.2, 6.1, 186.8) s:(1.0, 1.0, 1.0)
>>>>>>>>c HurtBox

>>>>>>>>> transform = p:(-0.2, 1.3, 0.1) r:(353.2, 6.1, 186.8) s:(1.7, 4.7, 1.7)

>>>>>>>>> UnityEngine.BoxCollider

>>>>>>>>> RoR2.HurtBox
>>>>>>>>>v healthComponent = EnforcerBody (RoR2.HealthComponent)
>>>>>>>>>v isBullseye = False
>>>>>>>>>v damageModifier = Normal
>>>>>>>>>v teamIndex = None
>>>>>>>>>v hurtBoxGroup = mdlCommandoDualies (1) (RoR2.HurtBoxGroup)
>>>>>>>>>v indexInGroup = 3
>>>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>>>>>>c calf.r

>>>>>>>>> transform = p:(0.0, 3.8, 0.0) r:(355.6, 186.2, 172.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>c HurtBox

>>>>>>>>>> transform = p:(0.2, 2.3, -0.1) r:(355.6, 186.2, 172.6) s:(1.1, 4.1, 1.0)

>>>>>>>>>> UnityEngine.BoxCollider

>>>>>>>>>> RoR2.HurtBox
>>>>>>>>>>v healthComponent = EnforcerBody (RoR2.HealthComponent)
>>>>>>>>>>v isBullseye = False
>>>>>>>>>>v damageModifier = Normal
>>>>>>>>>>v teamIndex = None
>>>>>>>>>>v hurtBoxGroup = mdlCommandoDualies (1) (RoR2.HurtBoxGroup)
>>>>>>>>>>v indexInGroup = 4
>>>>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>>>>>>>c foot.r

>>>>>>>>>> transform = p:(0.0, 4.1, 0.0) r:(89.1, 0.1, 0.1) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c toe.r

>>>>>>>>>>> transform = p:(0.0, 1.0, 0.0) r:(270.0, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c toe.r_end

>>>>>>>>>>>> transform = p:(0.0, 0.7, 0.0) r:(270.0, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c stomach

>>>>>>> transform = p:(0.0, 2.5, 0.0) r:(0.8, 0.4, 0.4) s:(1.0, 1.0, 1.0)
>>>>>>>c HurtBox

>>>>>>>> transform = p:(0.0, 0.7, -0.2) r:(90.0, 0.0, 0.0) s:(2.7, 2.6, 1.6)

>>>>>>>> UnityEngine.BoxCollider

>>>>>>>> RoR2.HurtBox
>>>>>>>>v healthComponent = EnforcerBody (RoR2.HealthComponent)
>>>>>>>>v isBullseye = False
>>>>>>>>v damageModifier = Normal
>>>>>>>>v teamIndex = None
>>>>>>>>v hurtBoxGroup = mdlCommandoDualies (1) (RoR2.HurtBoxGroup)
>>>>>>>>v indexInGroup = 5
>>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>>>>>c chest

>>>>>>>> transform = p:(0.0, 1.4, 0.0) r:(1.5, 0.4, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c HurtBox

>>>>>>>>> transform = p:(0.0, 1.8, 0.0) r:(0.8, 0.4, 0.4) s:(3.2, 2.0, 2.6)

>>>>>>>>> UnityEngine.BoxCollider

>>>>>>>>> RoR2.HurtBox
>>>>>>>>>v healthComponent = EnforcerBody (RoR2.HealthComponent)
>>>>>>>>>v isBullseye = False
>>>>>>>>>v damageModifier = Normal
>>>>>>>>>v teamIndex = None
>>>>>>>>>v hurtBoxGroup = mdlCommandoDualies (1) (RoR2.HurtBoxGroup)
>>>>>>>>>v indexInGroup = 6
>>>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>>>>>>c HurtBox

>>>>>>>>> transform = p:(0.0, 2.1, -1.3) r:(0.8, 0.4, 0.4) s:(3.6, 3.8, 1.9)

>>>>>>>>> UnityEngine.BoxCollider

>>>>>>>>> RoR2.HurtBox
>>>>>>>>>v healthComponent = EnforcerBody (RoR2.HealthComponent)
>>>>>>>>>v isBullseye = True
>>>>>>>>>v damageModifier = Normal
>>>>>>>>>v teamIndex = None
>>>>>>>>>v hurtBoxGroup = mdlCommandoDualies (1) (RoR2.HurtBoxGroup)
>>>>>>>>>v indexInGroup = 7
>>>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>>>>>>c MuzzleCenter

>>>>>>>>> transform = p:(0.0, 0.0, 4.0) r:(1.5, 0.4, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c head

>>>>>>>>> transform = p:(0.0, 3.2, 0.0) r:(357.4, 0.0, 359.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>c head_end

>>>>>>>>>> transform = p:(0.0, 1.9, 0.0) r:(357.4, 0.0, 359.7) s:(1.0, 1.0, 1.0)
>>>>>>>>c upper_arm.l

>>>>>>>>> transform = p:(-1.5, 1.6, -0.1) r:(14.8, 359.4, 98.2) s:(1.0, 1.0, 1.0)
>>>>>>>>>c lower_arm.l

>>>>>>>>>> transform = p:(0.0, 3.3, 0.0) r:(72.0, 143.7, 231.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c hand.l

>>>>>>>>>>> transform = p:(0.0, 3.0, 0.0) r:(293.5, 307.9, 147.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c f1.l

>>>>>>>>>>>> transform = p:(0.0, 1.1, 0.0) r:(320.7, 283.6, 162.2) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c f2.l

>>>>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(333.8, 278.7, 164.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c f2.l_end

>>>>>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(333.8, 278.7, 164.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c gun.l

>>>>>>>>>>>> transform = p:(-0.1, 0.4, -0.3) r:(356.3, 355.4, 110.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c gun.l_end

>>>>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(356.3, 355.4, 110.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c GunL

>>>>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(356.3, 355.4, 290.6) s:(1.0, 1.0, 1.0)

>>>>>>>>>>>>> UnityEngine.MeshFilter

>>>>>>>>>>>>> UnityEngine.MeshRenderer
>>>>>>>>>>>>>c MuzzleLeft

>>>>>>>>>>>>>> transform = p:(0.0, -1.9, 0.0) r:(20.5, 266.8, 93.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c thumb.l

>>>>>>>>>>>> transform = p:(-0.2, 0.6, 0.0) r:(75.7, 182.0, 179.2) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c thumb.l_end

>>>>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(75.7, 182.0, 179.2) s:(1.0, 1.0, 1.0)
>>>>>>>>c upper_arm.r

>>>>>>>>> transform = p:(1.5, 1.6, -0.1) r:(28.1, 358.2, 261.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>c lower_arm.r

>>>>>>>>>> transform = p:(0.0, 3.3, 0.0) r:(60.0, 200.4, 113.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c hand.r

>>>>>>>>>>> transform = p:(0.0, 3.0, 0.0) r:(303.6, 33.5, 230.9) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c f1.r

>>>>>>>>>>>> transform = p:(0.0, 1.1, 0.0) r:(325.4, 64.7, 213.4) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c f2.r

>>>>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(337.1, 73.2, 209.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c f2.r_end

>>>>>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(337.1, 73.2, 209.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c gun.r

>>>>>>>>>>>> transform = p:(0.1, 0.4, -0.3) r:(9.6, 2.4, 250.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c Cube.001

>>>>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(9.6, 2.4, 250.6) s:(1.0, 1.0, 1.0)

>>>>>>>>>>>>> UnityEngine.MeshFilter

>>>>>>>>>>>>> UnityEngine.MeshRenderer
>>>>>>>>>>>>c gun.r_end

>>>>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(9.6, 2.4, 250.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c GunR

>>>>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(9.6, 2.4, 71.2) s:(1.0, 1.0, 1.0)

>>>>>>>>>>>>> UnityEngine.MeshFilter

>>>>>>>>>>>>> UnityEngine.MeshRenderer
>>>>>>>>>>>>>c MuzzleRight

>>>>>>>>>>>>>> transform = p:(0.0, -1.7, 0.0) r:(18.5, 95.6, 100.1) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c thumb.r

>>>>>>>>>>>> transform = p:(0.2, 0.6, 0.0) r:(62.4, 177.8, 183.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c thumb.r_end

>>>>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(62.4, 177.8, 183.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c Shield

>>>>>>>>> transform = p:(1.2, -1.6, 4.2) r:(0.9, 0.3, 2.1) s:(7.6, 12.3, 3.3)

>>>>>>>>> UnityEngine.MeshFilter

>>>>>>>>> UnityEngine.BoxCollider

>>>>>>>>> UnityEngine.MeshRenderer
>>>>>c IKLegTarget.l

>>>>>> transform = p:(-1.9, 0.2, -0.2) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c IKLegPole.l

>>>>>>> transform = p:(0.0, -6.3, 0.1) r:(284.4, 279.7, 260.0) s:(1.0, 1.0, 1.0)
>>>>>>>c IKLegPole.l_end

>>>>>>>> transform = p:(0.0, 1.2, 0.0) r:(284.4, 279.7, 260.0) s:(1.0, 1.0, 1.0)
>>>>>c IKLegTarget.r

>>>>>> transform = p:(1.9, 0.1, -0.2) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c IKLegPole.r

>>>>>>> transform = p:(0.0, -6.3, 0.1) r:(284.4, 80.3, 100.0) s:(1.0, 1.0, 1.0)
>>>>>>>c IKLegPole.r_end

>>>>>>>> transform = p:(0.0, 1.2, 0.0) r:(284.4, 80.3, 100.0) s:(1.0, 1.0, 1.0)
>>>c CommandoMesh

>>>> transform = p:(0.0, 0.0, 0.1) r:(270.0, 0.0, 0.0) s:(7.3, 7.3, 7.3)

>>>> UnityEngine.SkinnedMeshRenderer
>c CameraPivot

>> transform = p:(0.0, 0.8, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>c AimOrigin

>> transform = p:(0.0, 0.5, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
