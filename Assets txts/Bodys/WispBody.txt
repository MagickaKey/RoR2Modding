WispBody

> transform = p:(17.8, -212.4, -150.8) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.CharacterBody
>v bodyIndex = 66
>v baseNameToken = WISP_BODY_NAME
>v subtitleNameToken = 
>v pendingTonicAfflictionCount = 0
>v bodyFlags = None
>v readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.CharacterBody]
>v rootMotionInMainState = False
>v mainRootSpeed = 0
>v baseMaxHealth = 35
>v baseRegen = 0
>v baseMaxShield = 0
>v baseMoveSpeed = 6
>v baseAcceleration = 12
>v baseJumpPower = 0
>v baseDamage = 4
>v baseAttackSpeed = 1
>v baseCrit = 0
>v baseArmor = 0
>v baseJumpCount = 1
>v autoCalculateLevelStats = True
>v levelMaxHealth = 10
>v levelRegen = 0
>v levelMaxShield = 0
>v levelMoveSpeed = 0
>v levelJumpPower = 0
>v levelDamage = 0.8
>v levelAttackSpeed = 0
>v levelCrit = 0
>v levelArmor = 0
>v killCount = 0
>v wasLucky = False
>v spreadBloomDecayTime = 0.45
>v spreadBloomCurve = UnityEngine.AnimationCurve
>v crosshairPrefab = StandardCrosshair (UnityEngine.GameObject)
>v hideCrosshair = False
>v aimOriginTransform = WispBody (UnityEngine.Transform)
>v hullClassification = Human
>v portraitIcon = WispBody (UnityEngine.Texture2D)
>v isChampion = False
>v currentVehicle = 
>v preferredPodPrefab = 

> RoR2.HealthComponent
>v health = 100
>v shield = 0
>v barrier = 0
>v body = 
>v dontShowHealthbar = False
>v globalDeathEventChanceCoefficient = 1
>v medkitActivationDelay = 1.1
>v frozenExecuteThreshold = 0.3

> RoR2.InputBankTest
>v lookPitch = 0
>v lookYaw = 0
>v moveVector = (0.0, 0.0, 0.0)
>v skill1 = RoR2.InputBankTest+ButtonState
>v skill2 = RoR2.InputBankTest+ButtonState
>v skill3 = RoR2.InputBankTest+ButtonState
>v skill4 = RoR2.InputBankTest+ButtonState
>v interact = RoR2.InputBankTest+ButtonState
>v jump = RoR2.InputBankTest+ButtonState
>v sprint = RoR2.InputBankTest+ButtonState
>v activateEquipment = RoR2.InputBankTest+ButtonState
>v ping = RoR2.InputBankTest+ButtonState
>v emoteRequest = -1

> RoR2.CameraTargetParams
>v cameraParams = ccpStandardTall (RoR2.CharacterCameraParams)
>v cameraPivotTransform = 
>v aimMode = Standard
>v recoil = (0.0, 0.0)
>v idealLocalCameraPos = (0.0, 2.0, -6.0)
>v fovOverride = -1
>v dontRaycastToPivot = False

> RoR2.Networking.CharacterNetworkTransform
>v positionTransmitInterval = 0.1
>v lastPositionTransmitTime = -Infinity
>v interpolationFactor = 2
>v newestNetSnapshot = RoR2.Networking.CharacterNetworkTransform+Snapshot
>v debugDuplicatePositions = False
>v debugSnapshotReceived = False

> RoR2.RigidbodyDirection
>v aimDirection = (1.0, 1.0, 1.0)
>v rigid = WispBody (UnityEngine.Rigidbody)
>v angularVelocityPID = WispBody (QuaternionPID)
>v torquePID = WispBody (VectorPID)
>v freezeXRotation = False
>v freezeYRotation = False
>v freezeZRotation = False
>v animatorXCycle = 
>v animatorYCycle = 
>v animatorZCycle = 
>v animatorTorqueScale = 0

> RoR2.RigidbodyMotor
>v moveVector = (0.0, 0.0, 0.0)
>v rigid = WispBody (UnityEngine.Rigidbody)
>v forcePID = WispBody (VectorPID)
>v centerOfMassOffset = (0.0, 0.0, 0.0)
>v animatorForward = 
>v animatorRight = 
>v animatorUp = 
>v enableOverrideMoveVectorInLocalSpace = False
>v canTakeImpactDamage = True
>v overrideMoveVectorInLocalSpace = (0.0, 0.0, 0.0)

> QuaternionPID
>v customName = Angular Velocity PID
>v PID = (5.0, 1.0, 0.0)
>v inputQuat = (0.0, 0.0, 0.0, 1.0)
>v targetQuat = (0.0, 0.0, 0.0, 1.0)
>v outputVector = (0.0, 0.0, 0.0)
>v gain = 3

> VectorPID
>v customName = torquePID
>v PID = (2.0, 1.0, 0.0)
>v inputVector = (0.0, 0.0, 0.0)
>v targetVector = (0.0, 0.0, 0.0)
>v outputVector = (0.0, 0.0, 0.0)
>v isAngle = True
>v gain = 3

> VectorPID
>v customName = Force PID
>v PID = (3.0, 0.0, 0.0)
>v inputVector = (0.0, 0.0, 0.0)
>v targetVector = (0.0, 0.0, 0.0)
>v outputVector = (0.0, 0.0, 0.0)
>v isAngle = False
>v gain = 1

> RoR2.TeamComponent
>v hideAllyCardDisplay = False

> RoR2.EntityStateMachine
>v customName = Body
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.EntityStateMachine
>v customName = Weapon
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.SkillLocator
>v primary = WispBody (RoR2.GenericSkill)
>v secondary = 
>v utility = 
>v special = 
>v passiveSkill = RoR2.SkillLocator+PassiveSkill

> RoR2.GenericSkill
>v skillName = FireEmber
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 4
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = True
>v stateMachine = WispBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Any
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = 
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.Interactor
>v maxInteractionDistance = 3

> RoR2.InteractionDriver
>v highlightInteractor = False
>v interactableOverride = 

> UnityEngine.Rigidbody

> RoR2.ModelLocator
>v modelTransform = mdlWisp1Mouth (UnityEngine.Transform)
>v modelBaseTransform = Model Base (UnityEngine.Transform)
>v dontReleaseModelOnDeath = False
>v autoUpdateModelTransform = True
>v dontDetatchFromParent = False
>v noCorpse = False
>v normalizeToFloor = False
>v preserveModel = False

> RoR2.NetworkStateMachine

> RoR2.CharacterDeathBehavior
>v deathStateMachine = WispBody (RoR2.EntityStateMachine)
>v deathState = EntityStates.SerializableEntityStateType
>v idleStateMachine = RoR2.EntityStateMachine[]

> UnityEngine.SphereCollider

> RoR2.DeathRewards
>v expReward = 0
>v logUnlockableName = Logs.WispBody.0
>v bossPickup = RoR2.SerializablePickupIndex

> RoR2.EquipmentSlot
>v equipmentActivateString = Play_UI_equipment_activate

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Play_wisp_active_loop
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Stop_wisp_active_loop
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False

> RoR2.SfxLocator
>v deathSound = Play_wisp_death
>v barkSound = Play_wisp_idle
>v openSound = 
>v landingSound = 
>v fallDamageSound = 

> RoR2.SetStateOnHurt
>v hitThreshold = 0.1
>v targetStateMachine = WispBody (RoR2.EntityStateMachine)
>v idleStateMachine = RoR2.EntityStateMachine[]
>v hurtState = EntityStates.SerializableEntityStateType
>v canBeHitStunned = True
>v canBeStunned = True
>v canBeFrozen = True
>c Model Base

>> transform = p:(0.0, -0.2, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c mdlWisp1Mouth

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.Animator

>>> RoR2.CharacterModel
>>>v body = WispBody (RoR2.CharacterBody)
>>>v itemDisplayRuleSet = idrsWisp (RoR2.ItemDisplayRuleSet)
>>>v autoPopulateLightInfos = True
>>>v autoPopulateParticleSystemInfos = True
>>>v baseParticleSystemInfos = RoR2.CharacterModel+ParticleSystemInfo[]
>>>v baseRendererInfos = RoR2.CharacterModel+RendererInfo[]
>>>v baseLightInfos = RoR2.CharacterModel+LightInfo[]
>>>v invisibilityCount = 0
>>>v temporaryOverlays = System.Collections.Generic.List`1[RoR2.TemporaryOverlay]
>>>v revealedMaterial = matRevealedEffect (UnityEngine.Material)
>>>v cloakedMaterial = matCloakedEffect (UnityEngine.Material)
>>>v ghostMaterial = matGhostEffect (UnityEngine.Material)
>>>v bellBuffMaterial = matBellBuff (UnityEngine.Material)
>>>v wolfhatMaterial = matWolfhatOverlay (UnityEngine.Material)
>>>v energyShieldMaterial = matEnergyShield (UnityEngine.Material)
>>>v fullCritMaterial = matFullCrit (UnityEngine.Material)
>>>v beetleJuiceMaterial = matBeetleJuice (UnityEngine.Material)
>>>v brittleMaterial = matBrittle (UnityEngine.Material)
>>>v clayGooMaterial = matClayGooDebuff (UnityEngine.Material)
>>>v slow80Material = matSlow80Debuff (UnityEngine.Material)
>>>v immuneMaterial = matImmune (UnityEngine.Material)
>>>v elitePoisonOverlayMaterial = matElitePoisonOverlay (UnityEngine.Material)
>>>v elitePoisonParticleReplacementMaterial = matElitePoisonParticleReplacement (UnityEngine.Material)
>>>v weakMaterial = matWeakOverlay (UnityEngine.Material)

>>> RoR2.HurtBoxGroup
>>>v hurtBoxes = RoR2.HurtBox[]
>>>v mainHurtBox = Hurtbox (RoR2.HurtBox)
>>>v bullseyeCount = 1

>>> ChildLocator

>>> RoR2.PrintController
>>>v printTime = 4
>>>v printCurve = UnityEngine.AnimationCurve
>>>v startingPrintHeight = 99
>>>v maxPrintHeight = 99
>>>v startingPrintBias = 0.95
>>>v maxPrintBias = 0
>>>v animateFlowmapPower = False
>>>v startingFlowmapPower = 0
>>>v maxFlowmapPower = 0
>>>v disableWhenFinished = True
>>>v paused = False
>>>v age = 0
>>>c Sphere.000

>>>> transform = p:(0.0, -0.7, 0.0) r:(270.0, 0.0, 0.0) s:(1.5, 1.5, 1.5)

>>>> UnityEngine.SkinnedMeshRenderer
>>>c WispArmature

>>>> transform = p:(0.0, -0.3, -0.1) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c ROOT

>>>>> transform = p:(0.0, 0.6, -0.7) r:(270.0, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c Base

>>>>>> transform = p:(0.0, 0.7, 1.2) r:(355.9, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c HeadOrigin

>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(274.1, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c Head

>>>>>>> transform = p:(0.0, -0.2, 0.0) r:(274.1, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>c Head_end

>>>>>>>> transform = p:(0.0, 0.6, 0.0) r:(274.1, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>c Muzzle

>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c Jaw

>>>>>>> transform = p:(0.0, -0.4, 0.0) r:(274.1, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>c Jaw_end

>>>>>>>> transform = p:(0.0, 0.6, 0.0) r:(274.1, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c Fire

>>>>>>> transform = p:(0.0, -0.2, -0.1) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.ParticleSystem

>>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>c Hurtbox

>>>>>> transform = p:(0.0, 0.5, 1.5) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>> UnityEngine.SphereCollider

>>>>>> RoR2.HurtBox
>>>>>>v healthComponent = WispBody (RoR2.HealthComponent)
>>>>>>v isBullseye = True
>>>>>>v damageModifier = Normal
>>>>>>v teamIndex = None
>>>>>>v hurtBoxGroup = mdlWisp1Mouth (RoR2.HurtBoxGroup)
>>>>>>v indexInGroup = 0
>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]

>>>>>> SurfaceDefProvider
>>>>>>v surfaceDef = sdWisp (SurfaceDef)
>>>c Point light

>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.Light
>>>c AimAssist

>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> RoR2.AimAssistTarget
>>>>v point0 = AimAssist (UnityEngine.Transform)
>>>>v point1 = AimAssist (UnityEngine.Transform)
>>>>v assistScale = 1
>>>>v healthComponent = WispBody (RoR2.HealthComponent)
>>>>v teamComponent = WispBody (RoR2.TeamComponent)
>>>>v instancesList = System.Collections.Generic.List`1[RoR2.AimAssistTarget]
>>>>v debugAimAssistVisualCoefficient = RoR2.ConVar.FloatConVar
>c WispSpawn

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> DestroyOnParticleEnd
>>c InitialBurst

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>c Flames

>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.ParticleSystem

>>>> UnityEngine.ParticleSystemRenderer
>>>c Flash

>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.ParticleSystem

>>>> UnityEngine.ParticleSystemRenderer
>>>c Distortion

>>>> transform = p:(0.0, 0.0, 0.3) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.ParticleSystem

>>>> UnityEngine.ParticleSystemRenderer
>>c Point light

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.Light

>>> LightIntensityCurve
>>>v curve = UnityEngine.AnimationCurve
>>>v timeMax = 1
>>>v loop = False
>>>v randomStart = False

>>> RoR2.FlickerLight
>>>v light = Point light (UnityEngine.Light)
>>>v sinWaves = Wave[]
