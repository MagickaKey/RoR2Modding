BellBody

> transform = p:(50.6, -208.1, -60.8) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.CharacterBody
>v bodyIndex = 11
>v baseNameToken = BELL_BODY_NAME
>v subtitleNameToken = 
>v pendingTonicAfflictionCount = 0
>v bodyFlags = None
>v readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.CharacterBody]
>v rootMotionInMainState = False
>v mainRootSpeed = 0
>v baseMaxHealth = 300
>v baseRegen = 0
>v baseMaxShield = 0
>v baseMoveSpeed = 10
>v baseAcceleration = 12
>v baseJumpPower = 0
>v baseDamage = 10
>v baseAttackSpeed = 1
>v baseCrit = 0
>v baseArmor = 0
>v baseJumpCount = 1
>v autoCalculateLevelStats = True
>v levelMaxHealth = 90
>v levelRegen = 0
>v levelMaxShield = 0
>v levelMoveSpeed = 0
>v levelJumpPower = 0
>v levelDamage = 2
>v levelAttackSpeed = 0
>v levelCrit = 0
>v levelArmor = 0
>v killCount = 0
>v wasLucky = False
>v spreadBloomDecayTime = 0.45
>v spreadBloomCurve = UnityEngine.AnimationCurve
>v crosshairPrefab = StandardCrosshair (UnityEngine.GameObject)
>v hideCrosshair = False
>v aimOriginTransform = AimOrigin (UnityEngine.Transform)
>v hullClassification = Golem
>v portraitIcon = BellBody (UnityEngine.Texture2D)
>v isChampion = False
>v currentVehicle = 
>v preferredPodPrefab = 

> RoR2.HealthComponent
>v health = 100
>v shield = 0
>v barrier = 0
>v body = 
>v dontShowHealthbar = False
>v globalDeathEventChanceCoefficient = 1
>v medkitActivationDelay = 1.1
>v frozenExecuteThreshold = 0.3

> RoR2.InputBankTest
>v lookPitch = 0
>v lookYaw = 0
>v moveVector = (0.0, 0.0, 0.0)
>v skill1 = RoR2.InputBankTest+ButtonState
>v skill2 = RoR2.InputBankTest+ButtonState
>v skill3 = RoR2.InputBankTest+ButtonState
>v skill4 = RoR2.InputBankTest+ButtonState
>v interact = RoR2.InputBankTest+ButtonState
>v jump = RoR2.InputBankTest+ButtonState
>v sprint = RoR2.InputBankTest+ButtonState
>v activateEquipment = RoR2.InputBankTest+ButtonState
>v ping = RoR2.InputBankTest+ButtonState
>v emoteRequest = -1

> RoR2.CameraTargetParams
>v cameraParams = ccpStandardTall (RoR2.CharacterCameraParams)
>v cameraPivotTransform = 
>v aimMode = Standard
>v recoil = (0.0, 0.0)
>v idealLocalCameraPos = (0.0, 2.0, -6.0)
>v fovOverride = -1
>v dontRaycastToPivot = False

> RoR2.Networking.CharacterNetworkTransform
>v positionTransmitInterval = 0.1
>v lastPositionTransmitTime = -Infinity
>v interpolationFactor = 2
>v newestNetSnapshot = RoR2.Networking.CharacterNetworkTransform+Snapshot
>v debugDuplicatePositions = False
>v debugSnapshotReceived = False

> RoR2.RigidbodyDirection
>v aimDirection = (1.0, 1.0, 1.0)
>v rigid = BellBody (UnityEngine.Rigidbody)
>v angularVelocityPID = BellBody (QuaternionPID)
>v torquePID = BellBody (VectorPID)
>v freezeXRotation = True
>v freezeYRotation = False
>v freezeZRotation = True
>v animatorXCycle = 
>v animatorYCycle = 
>v animatorZCycle = 
>v animatorTorqueScale = 6

> RoR2.RigidbodyMotor
>v moveVector = (0.0, 0.0, 0.0)
>v rigid = BellBody (UnityEngine.Rigidbody)
>v forcePID = BellBody (VectorPID)
>v centerOfMassOffset = (0.0, 0.0, 0.0)
>v animatorForward = forward
>v animatorRight = right
>v animatorUp = up
>v enableOverrideMoveVectorInLocalSpace = False
>v canTakeImpactDamage = True
>v overrideMoveVectorInLocalSpace = (0.0, 0.0, 0.0)

> QuaternionPID
>v customName = Angular Velocity PID
>v PID = (5.0, 1.0, 0.0)
>v inputQuat = (0.0, 0.0, 0.0, 1.0)
>v targetQuat = (0.0, 0.0, 0.0, 1.0)
>v outputVector = (0.0, 0.0, 0.0)
>v gain = 1

> VectorPID
>v customName = torquePID
>v PID = (2.0, 1.0, 0.0)
>v inputVector = (0.0, 0.0, 0.0)
>v targetVector = (0.0, 0.0, 0.0)
>v outputVector = (0.0, 0.0, 0.0)
>v isAngle = True
>v gain = 1

> VectorPID
>v customName = Force PID
>v PID = (1.0, 0.0, 0.0)
>v inputVector = (0.0, 0.0, 0.0)
>v targetVector = (0.0, 0.0, 0.0)
>v outputVector = (0.0, 0.0, 0.0)
>v isAngle = False
>v gain = 1

> RoR2.TeamComponent
>v hideAllyCardDisplay = False

> RoR2.EntityStateMachine
>v customName = Body
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.EntityStateMachine
>v customName = Weapon
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.SkillLocator
>v primary = BellBody (RoR2.GenericSkill)
>v secondary = 
>v utility = 
>v special = 
>v passiveSkill = RoR2.SkillLocator+PassiveSkill

> RoR2.GenericSkill
>v skillName = BellBlast
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 5
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = BellBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Any
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = 
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.Interactor
>v maxInteractionDistance = 3

> RoR2.InteractionDriver
>v highlightInteractor = False
>v interactableOverride = 

> UnityEngine.Rigidbody

> RoR2.ModelLocator
>v modelTransform = mdlBell (UnityEngine.Transform)
>v modelBaseTransform = Model Base (UnityEngine.Transform)
>v dontReleaseModelOnDeath = False
>v autoUpdateModelTransform = True
>v dontDetatchFromParent = False
>v noCorpse = False
>v normalizeToFloor = False
>v preserveModel = True

> RoR2.NetworkStateMachine

> RoR2.CharacterDeathBehavior
>v deathStateMachine = BellBody (RoR2.EntityStateMachine)
>v deathState = EntityStates.SerializableEntityStateType
>v idleStateMachine = RoR2.EntityStateMachine[]

> UnityEngine.CapsuleCollider

> RoR2.DeathRewards
>v expReward = 0
>v logUnlockableName = Logs.BellBody.0
>v bossPickup = RoR2.SerializablePickupIndex

> RoR2.EquipmentSlot
>v equipmentActivateString = Play_UI_equipment_activate

> RoR2.SfxLocator
>v deathSound = Play_bellBody_death
>v barkSound = Play_bellBody_idle_VO
>v openSound = 
>v landingSound = 
>v fallDamageSound = 

> RoR2.SetStateOnHurt
>v hitThreshold = 0.1
>v targetStateMachine = BellBody (RoR2.EntityStateMachine)
>v idleStateMachine = RoR2.EntityStateMachine[]
>v hurtState = EntityStates.SerializableEntityStateType
>v canBeHitStunned = True
>v canBeStunned = True
>v canBeFrozen = True

> RoR2.BodyAnimatorSmoothingParameters
>v smoothingParameters = RoR2.BodyAnimatorSmoothingParameters+SmoothingParameters
>v defaultParameters = RoR2.BodyAnimatorSmoothingParameters+SmoothingParameters

> AkGameObj
>v isEnvironmentAware = True
>v m_positionOffsetData = AkGameObjPositionOffsetData

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Play_bellBody_idle_loop
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Stop_bellBody_idle_loop
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False
>c Model Base

>> transform = p:(0.0, -0.2, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c mdlBell

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.Animator

>>> ChildLocator

>>> RoR2.AimAnimator
>>>v inputBank = BellBody (RoR2.InputBankTest)
>>>v directionComponent = 
>>>v pitchRangeMin = -60
>>>v pitchRangeMax = 60
>>>v yawRangeMin = -180
>>>v yawRangeMax = 180
>>>v pitchGiveupRange = 30
>>>v yawGiveupRange = 30
>>>v giveupDuration = 4
>>>v raisedApproachSpeed = 720
>>>v loweredApproachSpeed = 360
>>>v smoothTime = 0.1
>>>v fullYaw = True
>>>v aimType = Direct
>>>v enableAimWeight = False

>>> RoR2.CharacterModel
>>>v body = BellBody (RoR2.CharacterBody)
>>>v itemDisplayRuleSet = idrsBell (RoR2.ItemDisplayRuleSet)
>>>v autoPopulateLightInfos = True
>>>v autoPopulateParticleSystemInfos = True
>>>v baseParticleSystemInfos = RoR2.CharacterModel+ParticleSystemInfo[]
>>>v baseRendererInfos = RoR2.CharacterModel+RendererInfo[]
>>>v baseLightInfos = RoR2.CharacterModel+LightInfo[]
>>>v invisibilityCount = 0
>>>v temporaryOverlays = System.Collections.Generic.List`1[RoR2.TemporaryOverlay]
>>>v revealedMaterial = matRevealedEffect (UnityEngine.Material)
>>>v cloakedMaterial = matCloakedEffect (UnityEngine.Material)
>>>v ghostMaterial = matGhostEffect (UnityEngine.Material)
>>>v bellBuffMaterial = matBellBuff (UnityEngine.Material)
>>>v wolfhatMaterial = matWolfhatOverlay (UnityEngine.Material)
>>>v energyShieldMaterial = matEnergyShield (UnityEngine.Material)
>>>v fullCritMaterial = matFullCrit (UnityEngine.Material)
>>>v beetleJuiceMaterial = matBeetleJuice (UnityEngine.Material)
>>>v brittleMaterial = matBrittle (UnityEngine.Material)
>>>v clayGooMaterial = matClayGooDebuff (UnityEngine.Material)
>>>v slow80Material = matSlow80Debuff (UnityEngine.Material)
>>>v immuneMaterial = matImmune (UnityEngine.Material)
>>>v elitePoisonOverlayMaterial = matElitePoisonOverlay (UnityEngine.Material)
>>>v elitePoisonParticleReplacementMaterial = matElitePoisonParticleReplacement (UnityEngine.Material)
>>>v weakMaterial = matWeakOverlay (UnityEngine.Material)

>>> RoR2.HurtBoxGroup
>>>v hurtBoxes = RoR2.HurtBox[]
>>>v mainHurtBox = Hurtbox (RoR2.HurtBox)
>>>v bullseyeCount = 1

>>> RoR2.TemporaryOverlay
>>>v originalMaterial = matBellFlashBright (UnityEngine.Material)
>>>v materialInstance = 
>>>v inspectorCharacterModel = mdlBell (RoR2.CharacterModel)
>>>v animateShaderAlpha = True
>>>v alphaCurve = UnityEngine.AnimationCurve
>>>v duration = 2
>>>v destroyComponentOnEnd = True
>>>v destroyObjectOnEnd = False
>>>v destroyEffectPrefab = 
>>>v destroyEffectChildString = 

>>> RoR2.ExplodeRigidbodiesOnStart
>>>v bodies = UnityEngine.Rigidbody[]
>>>v force = 0
>>>v explosionRadius = 300

>>> RoR2.RagdollController
>>>v bones = UnityEngine.Transform[]
>>>v componentsToDisableOnRagdoll = UnityEngine.MonoBehaviour[]
>>>c BellArmature

>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c ROOT

>>>>> transform = p:(0.0, 0.0, -3.2) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c Base

>>>>>> transform = p:(0.0, 2.7, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c Chain.1

>>>>>>> transform = p:(0.0, 1.7, 0.0) r:(0.0, 238.7, 180.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.Rigidbody

>>>>>>> UnityEngine.SphereCollider
>>>>>>>c Chain.2

>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(0.0, 180.0, 180.0) s:(1.0, 1.0, 1.0)

>>>>>>>> UnityEngine.Rigidbody

>>>>>>>> UnityEngine.SphereCollider

>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>v rotationDrive = UnityEngine.JointDrive
>>>>>>>>c Chain.3

>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(0.0, 180.0, 180.0) s:(1.0, 1.0, 1.0)

>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>> UnityEngine.SphereCollider

>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>v rotationDrive = UnityEngine.JointDrive
>>>>>>>>>c Chain.4

>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(0.0, 180.0, 180.0) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>>> UnityEngine.SphereCollider

>>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>>v rotationDrive = UnityEngine.JointDrive
>>>>>>>>>>c Bell

>>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(0.0, 180.0, 180.0) s:(1.0, 1.0, 1.0)

>>>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>>>> UnityEngine.SphereCollider

>>>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>>>v rotationDrive = UnityEngine.JointDrive
>>>>>>>>>>>c Bell_end

>>>>>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(0.0, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c Muzzle

>>>>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 180.0, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>c Shield.l

>>>>>>> transform = p:(-1.0, 1.2, 0.0) r:(0.0, 0.0, 176.5) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.Rigidbody

>>>>>>> UnityEngine.BoxCollider

>>>>>>> RoR2.RigidbodyStickOnImpact
>>>>>>>v stickSoundString = Play_titanboss_step
>>>>>>>v stickEffectPrefab = BellBodyPartsImpact (UnityEngine.GameObject)
>>>>>>>v minimumRelativeVelocityMagnitude = 6
>>>>>>>v embedDistanceCurve = UnityEngine.AnimationCurve
>>>>>>>c Shield.l_end

>>>>>>>> transform = p:(0.0, 3.2, 0.0) r:(0.0, 0.0, 176.5) s:(1.0, 1.0, 1.0)
>>>>>>>c Hurtbox

>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 176.5) s:(1.0, 1.0, 1.0)

>>>>>>>> UnityEngine.BoxCollider

>>>>>>>> RoR2.HurtBox
>>>>>>>>v healthComponent = BellBody (RoR2.HealthComponent)
>>>>>>>>v isBullseye = False
>>>>>>>>v damageModifier = Normal
>>>>>>>>v teamIndex = None
>>>>>>>>v hurtBoxGroup = mdlBell (RoR2.HurtBoxGroup)
>>>>>>>>v indexInGroup = 0
>>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]

>>>>>>>> SurfaceDefProvider
>>>>>>>>v surfaceDef = sdBell (SurfaceDef)
>>>>>>c Shield.r

>>>>>>> transform = p:(1.0, 1.2, 0.0) r:(0.0, 0.0, 183.5) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.Rigidbody

>>>>>>> UnityEngine.BoxCollider

>>>>>>> RoR2.RigidbodyStickOnImpact
>>>>>>>v stickSoundString = Play_titanboss_step
>>>>>>>v stickEffectPrefab = BellBodyPartsImpact (UnityEngine.GameObject)
>>>>>>>v minimumRelativeVelocityMagnitude = 6
>>>>>>>v embedDistanceCurve = UnityEngine.AnimationCurve
>>>>>>>c Shield.r_end

>>>>>>>> transform = p:(0.0, 3.2, 0.0) r:(0.0, 0.0, 183.5) s:(1.0, 1.0, 1.0)
>>>>>>>c Hurtbox

>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 183.5) s:(1.0, 1.0, 1.0)

>>>>>>>> UnityEngine.BoxCollider

>>>>>>>> RoR2.HurtBox
>>>>>>>>v healthComponent = BellBody (RoR2.HealthComponent)
>>>>>>>>v isBullseye = False
>>>>>>>>v damageModifier = Normal
>>>>>>>>v teamIndex = None
>>>>>>>>v hurtBoxGroup = mdlBell (RoR2.HurtBoxGroup)
>>>>>>>>v indexInGroup = 1
>>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]

>>>>>>>> SurfaceDefProvider
>>>>>>>>v surfaceDef = sdBell (SurfaceDef)
>>>>>>c Hurtbox

>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.SphereCollider

>>>>>>> RoR2.HurtBox
>>>>>>>v healthComponent = BellBody (RoR2.HealthComponent)
>>>>>>>v isBullseye = True
>>>>>>>v damageModifier = Normal
>>>>>>>v teamIndex = None
>>>>>>>v hurtBoxGroup = mdlBell (RoR2.HurtBoxGroup)
>>>>>>>v indexInGroup = 2
>>>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]

>>>>>>> SurfaceDefProvider
>>>>>>>v surfaceDef = sdBell (SurfaceDef)
>>>>>>c ProjectilePosition1

>>>>>>> transform = p:(-2.5, 2.5, -1.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.MeshRenderer

>>>>>>> UnityEngine.MeshFilter
>>>>>>c ProjectilePosition2

>>>>>>> transform = p:(0.0, 3.8, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.MeshRenderer

>>>>>>> UnityEngine.MeshFilter
>>>>>>c ProjectilePosition3

>>>>>>> transform = p:(2.5, 2.5, -1.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.MeshRenderer

>>>>>>> UnityEngine.MeshFilter
>>>>>>c AimOrigin

>>>>>>> transform = p:(0.0, 1.5, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>c BellMesh

>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.SkinnedMeshRenderer
>>>c GameObject

>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> RoR2.AimAssistTarget
>>>>v point0 = Base (UnityEngine.Transform)
>>>>v point1 = AimOrigin (UnityEngine.Transform)
>>>>v assistScale = 1
>>>>v healthComponent = BellBody (RoR2.HealthComponent)
>>>>v teamComponent = BellBody (RoR2.TeamComponent)
>>>>v instancesList = System.Collections.Generic.List`1[RoR2.AimAssistTarget]
>>>>v debugAimAssistVisualCoefficient = RoR2.ConVar.FloatConVar
