CryoCanisterProjectile

> transform = p:(95.3, 6.9, 37.5) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> UnityEngine.SphereCollider

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> UnityEngine.Rigidbody

> RoR2.Projectile.ProjectileController
>v ghostPrefab = CryoCanisterGhost (UnityEngine.GameObject)
>v ghost = 
>v isPrediction = False
>v allowPrediction = True
>v predictionId = 0
>v owner = 
>v procChainMask = RoR2.ProcChainMask
>v procCoefficient = 1
>v target = 
>v authorityEffect = 
>v predictionEffect = 

> RoR2.Projectile.ProjectileNetworkTransform
>v positionTransmitInterval = 0.03333334
>v interpolationFactor = 1
>v allowClientsideCollision = False

> RoR2.TeamFilter

> RoR2.Projectile.ProjectileSimple
>v velocity = 50
>v lifetime = 5
>v updateAfterFiring = False
>v enableVelocityOverLifetime = False
>v velocityOverLifetime = UnityEngine.AnimationCurve

> RoR2.Projectile.ProjectileImpactExplosion
>v impactEffect = CryoCanisterExplosion (UnityEngine.GameObject)
>v explosionSoundString = Play_MULT_m2_main_explode
>v lifetimeExpiredSoundString = 
>v offsetForLifetimeExpiredSound = 0
>v destroyOnEnemy = True
>v destroyOnWorld = True
>v timerAfterImpact = False
>v falloffModel = None
>v lifetime = 8
>v lifetimeAfterImpact = 0.3
>v lifetimeRandomOffset = 0
>v blastRadius = 12
>v blastDamageCoefficient = 1
>v blastProcCoefficient = 1
>v bonusBlastForce = (0.0, 0.0, 0.0)
>v fireChildren = True
>v childrenProjectilePrefab = CryoCanisterBombletsProjectile (UnityEngine.GameObject)
>v childrenCount = 5
>v childrenDamageCoefficient = 0.2
>v minAngleOffset = (-2.0, -2.0, -2.0)
>v maxAngleOffset = (2.0, 2.0, 2.0)
>v transformSpace = Normal
>v projectileHealthComponent = 

> RoR2.Projectile.ProjectileDamage
>v damage = 0
>v crit = False
>v force = 0
>v damageColorIndex = Default
>v damageType = Stun1s

> RoR2.ApplyTorqueOnStart
>v localTorque = (300.0, 300.0, 300.0)
>v randomize = True

> UnityEngine.Light
>c Ring

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
