PoisonOrbGhost

> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> RoR2.Projectile.ProjectileGhostController
>v authorityTransform = 
>v predictionTransform = 

> RoR2.VFXAttributes
>v vfxPriority = Always
>v vfxIntensity = Medium
>v optionalLights = UnityEngine.Light[]
>v secondaryParticleSystem = UnityEngine.ParticleSystem[]

> AkGameObj
>v isEnvironmentAware = True
>v m_positionOffsetData = AkGameObjPositionOffsetData

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Play_beetle_queen_attack2_projectile_loop
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False

> UnityEngine.Rigidbody

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Stop_beetle_queen_attack2_projectile_loop
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False
>c Particles

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 180.0, 180.0) s:(0.3, 0.3, 0.3)

>> Rewired.ComponentControls.Effects.RotateAroundAxis

>> ObjectScaleCurve
>>v curveX = UnityEngine.AnimationCurve
>>v curveY = UnityEngine.AnimationCurve
>>v curveZ = UnityEngine.AnimationCurve
>>v overallCurve = UnityEngine.AnimationCurve
>>v timeMax = 0.3
>>v time = 0
>>c SpitCore

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 180.0, 180.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.ParticleSystem

>>> UnityEngine.ParticleSystemRenderer
>>c Spikes

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 180.0, 180.0) s:(20.0, 20.0, 20.0)

>>> UnityEngine.ParticleSystem

>>> UnityEngine.ParticleSystemRenderer
>>c CoreSphere

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 180.0, 180.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.ParticleSystem

>>> UnityEngine.ParticleSystemRenderer
>c Helix

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> RotateObject
>>v rotationSpeed = (0.0, 0.0, 1440.0)
>>c Trail

>>> transform = p:(-0.3, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.TrailRenderer
>>c Trail

>>> transform = p:(0.3, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.TrailRenderer
>c Point Light

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.Light
