MercBody

> transform = p:(65.8, -140.5, -237.0) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.CharacterMotor
>v instancesList = System.Collections.Generic.List`1[RoR2.CharacterMotor]
>v walkSpeedPenaltyCoefficient = 1
>v characterDirection = 
>v muteWalkMotion = False
>v mass = 150
>v airControl = 0.25
>v disableAirControlUntilCollision = False
>v generateParametersOnAwake = True
>v slipStartAngle = 70
>v slipEndAngle = 55
>v jumpCount = 0
>v netIsGrounded = False
>v netGroundNormal = (0.0, 0.0, 0.0)
>v velocity = (0.0, 0.0, 0.0)
>v rootMotion = (0.0, 0.0, 0.0)

> RoR2.InputBankTest
>v lookPitch = 0
>v lookYaw = 0
>v moveVector = (0.0, 0.0, 0.0)
>v skill1 = RoR2.InputBankTest+ButtonState
>v skill2 = RoR2.InputBankTest+ButtonState
>v skill3 = RoR2.InputBankTest+ButtonState
>v skill4 = RoR2.InputBankTest+ButtonState
>v interact = RoR2.InputBankTest+ButtonState
>v jump = RoR2.InputBankTest+ButtonState
>v sprint = RoR2.InputBankTest+ButtonState
>v activateEquipment = RoR2.InputBankTest+ButtonState
>v ping = RoR2.InputBankTest+ButtonState
>v emoteRequest = -1

> RoR2.CharacterBody
>v bodyIndex = 47
>v baseNameToken = MERC_BODY_NAME
>v subtitleNameToken = 
>v pendingTonicAfflictionCount = 0
>v bodyFlags = ImmuneToExecutes
>v readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.CharacterBody]
>v rootMotionInMainState = False
>v mainRootSpeed = 0
>v baseMaxHealth = 140
>v baseRegen = 1.5
>v baseMaxShield = 0
>v baseMoveSpeed = 7
>v baseAcceleration = 80
>v baseJumpPower = 15
>v baseDamage = 12
>v baseAttackSpeed = 1
>v baseCrit = 1
>v baseArmor = 20
>v baseJumpCount = 2
>v autoCalculateLevelStats = True
>v levelMaxHealth = 42
>v levelRegen = 0.3
>v levelMaxShield = 0
>v levelMoveSpeed = 0
>v levelJumpPower = 0
>v levelDamage = 2.4
>v levelAttackSpeed = 0
>v levelCrit = 0
>v levelArmor = 0
>v killCount = 0
>v wasLucky = False
>v spreadBloomDecayTime = 1
>v spreadBloomCurve = UnityEngine.AnimationCurve
>v crosshairPrefab = SimpleDotCrosshair (UnityEngine.GameObject)
>v hideCrosshair = False
>v aimOriginTransform = AimOrigin (UnityEngine.Transform)
>v hullClassification = Human
>v portraitIcon = texMercIcon (UnityEngine.Texture2D)
>v isChampion = False
>v currentVehicle = 
>v preferredPodPrefab = SurvivorPod (UnityEngine.GameObject)

> RoR2.CameraTargetParams
>v cameraParams = ccpStandardMelee (RoR2.CharacterCameraParams)
>v cameraPivotTransform = 
>v aimMode = Standard
>v recoil = (0.0, 0.0)
>v idealLocalCameraPos = (0.0, 0.0, -4.7)
>v fovOverride = -1
>v dontRaycastToPivot = False

> RoR2.ModelLocator
>v modelTransform = mdlMerc (UnityEngine.Transform)
>v modelBaseTransform = ModelBase (UnityEngine.Transform)
>v dontReleaseModelOnDeath = False
>v autoUpdateModelTransform = True
>v dontDetatchFromParent = False
>v noCorpse = False
>v normalizeToFloor = False
>v preserveModel = False

> RoR2.EntityStateMachine
>v customName = Body
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.EntityStateMachine
>v customName = Weapon
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.CharacterDirection
>v moveVector = (0.0, 0.0, 0.0)
>v targetTransform = ModelBase (UnityEngine.Transform)
>v overrideAnimatorForwardTransform = 
>v rootMotionAccumulator = 
>v modelAnimator = 
>v driveFromRootRotation = False
>v turnSpeed = 720

> RoR2.GenericSkill
>v skillName = GroundLight
>v skillNameToken = MERC_PRIMARY_NAME
>v skillDescriptionToken = MERC_PRIMARY_DESCRIPTION
>v baseRechargeInterval = 0
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.08
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = MercBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Any
>v isCombatSkill = True
>v noSprint = False
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = texMercSkillIcons_0 (UnityEngine.Sprite)
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.GenericSkill
>v skillName = Whirlwind
>v skillNameToken = MERC_SECONDARY_NAME
>v skillDescriptionToken = MERC_SECONDARY_DESCRIPTION
>v baseRechargeInterval = 2.5
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = MercBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Skill
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = texMercSkillIcons_1 (UnityEngine.Sprite)
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.MercDashSkill
>v maxDashes = 3
>v timeoutDuration = 3
>v icons = UnityEngine.Sprite[]
>v skillName = Dash
>v skillNameToken = MERC_UTILITY_NAME
>v skillDescriptionToken = MERC_UTILITY_DESCRIPTION
>v baseRechargeInterval = 7
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = True
>v stateMachine = MercBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Skill
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = texMercSkillIcons_2 (UnityEngine.Sprite)
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.GenericSkill
>v skillName = Evis
>v skillNameToken = MERC_SPECIAL_NAME
>v skillDescriptionToken = MERC_SPECIAL_DESCRIPTION
>v baseRechargeInterval = 6
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.08
>v beginSkillCooldownOnSkillEnd = True
>v stateMachine = MercBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Skill
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = True
>v icon = texMercSkillIcons_3 (UnityEngine.Sprite)
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.SkillLocator
>v primary = MercBody (RoR2.GenericSkill)
>v secondary = MercBody (RoR2.GenericSkill)
>v utility = MercBody (RoR2.MercDashSkill)
>v special = MercBody (RoR2.GenericSkill)
>v passiveSkill = RoR2.SkillLocator+PassiveSkill

> RoR2.TeamComponent
>v hideAllyCardDisplay = False

> RoR2.HealthComponent
>v health = 100
>v shield = 0
>v barrier = 0
>v body = 
>v dontShowHealthbar = False
>v globalDeathEventChanceCoefficient = 1
>v medkitActivationDelay = 1.1
>v frozenExecuteThreshold = 0.3

> RoR2.Interactor
>v maxInteractionDistance = 3

> RoR2.InteractionDriver
>v highlightInteractor = True
>v interactableOverride = 

> RoR2.CharacterDeathBehavior
>v deathStateMachine = MercBody (RoR2.EntityStateMachine)
>v deathState = EntityStates.SerializableEntityStateType
>v idleStateMachine = RoR2.EntityStateMachine[]

> RoR2.Networking.CharacterNetworkTransform
>v positionTransmitInterval = 0.05
>v lastPositionTransmitTime = -Infinity
>v interpolationFactor = 3
>v newestNetSnapshot = RoR2.Networking.CharacterNetworkTransform+Snapshot
>v debugDuplicatePositions = False
>v debugSnapshotReceived = False

> RoR2.NetworkStateMachine

> RoR2.CharacterEmoteDefinitions
>v emoteDefinitions = RoR2.CharacterEmoteDefinitions+EmoteDef[]

> RoR2.EquipmentSlot
>v equipmentActivateString = Play_UI_equipment_activate

> RoR2.SfxLocator
>v deathSound = Play_ui_player_death
>v barkSound = 
>v openSound = 
>v landingSound = Play_char_land
>v fallDamageSound = Play_char_land_fall_damage

> RoR2.BodyAnimatorSmoothingParameters
>v smoothingParameters = RoR2.BodyAnimatorSmoothingParameters+SmoothingParameters
>v defaultParameters = RoR2.BodyAnimatorSmoothingParameters+SmoothingParameters

> UnityEngine.Rigidbody

> UnityEngine.CapsuleCollider

> KinematicCharacterController.KinematicCharacterMotor
>v CharacterController = MercBody (RoR2.CharacterMotor)
>v Capsule = MercBody (UnityEngine.CapsuleCollider)
>v Rigidbody = MercBody (UnityEngine.Rigidbody)
>v DetectDiscreteCollisions = False
>v GroundDetectionExtraDistance = 0
>v MaxStepHeight = 0.2
>v MinRequiredStepDepth = 0.1
>v MaxStableSlopeAngle = 55
>v MaxStableDistanceFromLedge = 0.5
>v PreventSnappingOnLedges = False
>v MaxStableDenivelationAngle = 55
>v RigidbodyInteractionType = None
>v PreserveAttachedRigidbodyMomentum = True
>v HasPlanarConstraint = False
>v PlanarConstraintAxis = (0.0, 0.0, 1.0)
>v StepHandling = Standard
>v LedgeHandling = True
>v InteractiveRigidbodyHandling = True
>v SafeMovement = False
>v GroundingStatus = KinematicCharacterController.CharacterGroundingReport
>v LastGroundingStatus = KinematicCharacterController.CharacterTransientGroundingReport
>v CollidableLayers = UnityEngine.LayerMask
>v MaxHitsBudget = 16
>v MaxCollisionBudget = 16
>v MaxGroundingSweepIterations = 2
>v MaxMovementSweepIterations = 6
>v MaxSteppingSweepIterations = 3
>v MaxRigidbodyOverlapsCount = 16
>v MaxDiscreteCollisionIterations = 3
>v CollisionOffset = 0.001
>v GroundProbeReboundDistance = 0.02
>v MinimumGroundProbingDistance = 0.005
>v GroundProbingBackstepDistance = 0.1
>v SweepProbingBackstepDistance = 0.002
>v SecondaryProbesVertical = 0.02
>v SecondaryProbesHorizontal = 0.001
>v MinVelocityMagnitude = 0.01
>v SteppingForwardDistance = 0.03
>v MinDistanceForLedge = 0.05
>v CorrelationForVerticalObstruction = 0.01
>v ExtraSteppingForwardDistance = 0.01
>v ExtraStepHeightPadding = 0.01

> RoR2.SetStateOnHurt
>v hitThreshold = 5
>v targetStateMachine = MercBody (RoR2.EntityStateMachine)
>v idleStateMachine = RoR2.EntityStateMachine[]
>v hurtState = EntityStates.SerializableEntityStateType
>v canBeHitStunned = False
>v canBeStunned = False
>v canBeFrozen = True
>c ModelBase

>> transform = p:(0.0, -0.9, 0.0) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
>>c mdlMerc

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.Animator

>>> RoR2.CharacterModel
>>>v body = MercBody (RoR2.CharacterBody)
>>>v itemDisplayRuleSet = idrsMerc (RoR2.ItemDisplayRuleSet)
>>>v autoPopulateLightInfos = True
>>>v autoPopulateParticleSystemInfos = True
>>>v baseParticleSystemInfos = RoR2.CharacterModel+ParticleSystemInfo[]
>>>v baseRendererInfos = RoR2.CharacterModel+RendererInfo[]
>>>v baseLightInfos = RoR2.CharacterModel+LightInfo[]
>>>v invisibilityCount = 0
>>>v temporaryOverlays = System.Collections.Generic.List`1[RoR2.TemporaryOverlay]
>>>v revealedMaterial = matRevealedEffect (UnityEngine.Material)
>>>v cloakedMaterial = matCloakedEffect (UnityEngine.Material)
>>>v ghostMaterial = matGhostEffect (UnityEngine.Material)
>>>v bellBuffMaterial = matBellBuff (UnityEngine.Material)
>>>v wolfhatMaterial = matWolfhatOverlay (UnityEngine.Material)
>>>v energyShieldMaterial = matEnergyShield (UnityEngine.Material)
>>>v fullCritMaterial = matFullCrit (UnityEngine.Material)
>>>v beetleJuiceMaterial = matBeetleJuice (UnityEngine.Material)
>>>v brittleMaterial = matBrittle (UnityEngine.Material)
>>>v clayGooMaterial = matClayGooDebuff (UnityEngine.Material)
>>>v slow80Material = matSlow80Debuff (UnityEngine.Material)
>>>v immuneMaterial = matImmune (UnityEngine.Material)
>>>v elitePoisonOverlayMaterial = matElitePoisonOverlay (UnityEngine.Material)
>>>v elitePoisonParticleReplacementMaterial = matElitePoisonParticleReplacement (UnityEngine.Material)
>>>v weakMaterial = matWeakOverlay (UnityEngine.Material)

>>> ChildLocator

>>> RoR2.HitBoxGroup
>>>v groupName = Sword
>>>v hitBoxes = RoR2.HitBox[]

>>> RoR2.HitBoxGroup
>>>v groupName = SwordLarge
>>>v hitBoxes = RoR2.HitBox[]

>>> RoR2.HitBoxGroup
>>>v groupName = Assaulter
>>>v hitBoxes = RoR2.HitBox[]

>>> RoR2.HitBoxGroup
>>>v groupName = WhirlwindGround
>>>v hitBoxes = RoR2.HitBox[]

>>> RoR2.HitBoxGroup
>>>v groupName = WhirlwindAir
>>>v hitBoxes = RoR2.HitBox[]

>>> RoR2.HurtBoxGroup
>>>v hurtBoxes = RoR2.HurtBox[]
>>>v mainHurtBox = TempHurtbox (RoR2.HurtBox)
>>>v bullseyeCount = 1

>>> DynamicBone
>>>v m_Root = JiggleHair (UnityEngine.Transform)
>>>v m_UpdateRate = 60
>>>v m_UpdateMode = Normal
>>>v m_Damping = 0.1
>>>v m_DampingDistrib = UnityEngine.AnimationCurve
>>>v m_Elasticity = 0.1
>>>v m_ElasticityDistrib = UnityEngine.AnimationCurve
>>>v m_Stiffness = 0.1
>>>v m_StiffnessDistrib = UnityEngine.AnimationCurve
>>>v m_Inert = 0
>>>v m_InertDistrib = UnityEngine.AnimationCurve
>>>v m_Radius = 0
>>>v m_RadiusDistrib = UnityEngine.AnimationCurve
>>>v m_EndLength = 0
>>>v m_EndOffset = (0.0, 0.0, 0.0)
>>>v m_Gravity = (0.0, 0.0, 0.0)
>>>v m_Force = (0.0, 0.0, 0.0)
>>>v m_Colliders = System.Collections.Generic.List`1[DynamicBoneCollider]
>>>v m_Exclusions = System.Collections.Generic.List`1[UnityEngine.Transform]
>>>v m_FreezeAxis = None
>>>v m_DistantDisable = False
>>>v m_ReferenceObject = 
>>>v m_DistanceToObject = 20

>>> RoR2.FootstepHandler
>>>v baseFootstepString = Play_player_footstep
>>>v enableFootstepDust = True
>>>v footstepDustPrefab = GenericFootstepDust (UnityEngine.GameObject)

>>> RoR2.AimAnimator
>>>v inputBank = MercBody (RoR2.InputBankTest)
>>>v directionComponent = MercBody (RoR2.CharacterDirection)
>>>v pitchRangeMin = -45
>>>v pitchRangeMax = 45
>>>v yawRangeMin = -75
>>>v yawRangeMax = 75
>>>v pitchGiveupRange = 60
>>>v yawGiveupRange = 60
>>>v giveupDuration = 3
>>>v raisedApproachSpeed = 720
>>>v loweredApproachSpeed = 360
>>>v smoothTime = 0.1
>>>v fullYaw = False
>>>v aimType = Direct
>>>v enableAimWeight = False

>>> Generics.Dynamics.InverseKinematics
>>>v solver = CyclicDescend
>>>v rArm = Generics.Dynamics.Core+Chain
>>>v lArm = Generics.Dynamics.Core+Chain
>>>v rLeg = Generics.Dynamics.Core+Chain
>>>v lLeg = Generics.Dynamics.Core+Chain
>>>v otherChains = Generics.Dynamics.Core+Chain[]
>>>v otherKChains = Generics.Dynamics.Core+KinematicChain[]
>>>v rigReader = 
>>>v animator = mdlMerc (UnityEngine.Animator)

>>> RoR2.RagdollController
>>>v bones = UnityEngine.Transform[]
>>>v componentsToDisableOnRagdoll = UnityEngine.MonoBehaviour[]
>>>c MercArmature

>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
>>>>c HeelRoll.l

>>>>> transform = p:(-0.2, 0.1, 0.0) r:(90.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c IKLegPole.l

>>>>>> transform = p:(0.1, 0.5, -0.5) r:(284.4, 279.6, 260.0) s:(1.0, 1.0, 1.0)
>>>>>>c IKLegPole.l_end

>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(284.4, 279.6, 260.0) s:(1.0, 1.0, 1.0)
>>>>>c ToeRoll.l

>>>>>> transform = p:(0.0, 0.3, 0.0) r:(284.4, 359.4, 0.6) s:(1.0, 1.0, 1.0)
>>>>>>c FootRoll.l

>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(310.4, 2.0, 358.4) s:(1.0, 1.0, 1.0)
>>>>>>>c IKLegTarget.l

>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(270.1, 360.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c IKLegTarget.l_end

>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(270.1, 360.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c IKFoot.l

>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(0.0, 0.4, 0.5) s:(1.0, 1.0, 1.0)
>>>>>>>c IKFoot.l_end

>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.4, 0.5) s:(1.0, 1.0, 1.0)
>>>>>>c ToeControl.l

>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(89.8, 254.0, 254.1) s:(1.0, 1.0, 1.0)
>>>>>>>c IKToe.l

>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(0.0, 0.3, 0.4) s:(1.0, 1.0, 1.0)
>>>>>>>>c IKToe.l_end

>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.3, 0.4) s:(1.0, 1.0, 1.0)
>>>>c HeelRoll.r

>>>>> transform = p:(0.2, 0.3, 0.0) r:(90.0, 22.2, 0.0) s:(1.0, 1.0, 1.0)
>>>>>c IKLegPole.r

>>>>>> transform = p:(0.0, 1.0, -0.5) r:(284.4, 102.5, 100.0) s:(1.0, 1.0, 1.0)
>>>>>>c IKLegPole.r_end

>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(284.4, 102.5, 100.0) s:(1.0, 1.0, 1.0)
>>>>>c ToeRoll.r

>>>>>> transform = p:(0.0, 0.3, 0.0) r:(284.4, 22.7, 359.4) s:(1.0, 1.0, 1.0)
>>>>>>c FootRoll.r

>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(310.4, 20.1, 1.6) s:(1.0, 1.0, 1.0)
>>>>>>>c IKLegTarget.r

>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(270.1, 22.1, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c IKLegTarget.r_end

>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(270.1, 22.1, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c IKFoot.r

>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(0.0, 21.7, 359.5) s:(1.0, 1.0, 1.0)
>>>>>>>c IKFoot.r_end

>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 21.7, 359.5) s:(1.0, 1.0, 1.0)
>>>>>>c ToeControl.r

>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(89.8, 128.1, 106.0) s:(1.0, 1.0, 1.0)
>>>>>>>c IKToe.r

>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(0.0, 21.8, 359.6) s:(1.0, 1.0, 1.0)
>>>>>>>>c IKToe.r_end

>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 21.8, 359.6) s:(1.0, 1.0, 1.0)
>>>>c ROOT

>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 359.9, 0.3) s:(1.0, 1.0, 1.0)
>>>>>c base

>>>>>> transform = p:(0.0, 1.2, -0.1) r:(90.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c IKArmTarget.l

>>>>>>> transform = p:(-0.4, 0.1, 0.3) r:(270.0, 219.9, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>c IKArmPole.l

>>>>>>>> transform = p:(-2.5, -2.7, 0.6) r:(270.0, 219.9, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c IKArmPole.l_end

>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(270.0, 219.9, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c IKArmTarget.r

>>>>>>> transform = p:(0.4, 0.0, 0.2) r:(317.9, 89.9, 302.6) s:(1.0, 1.0, 1.0)
>>>>>>>c IKArmPole.r

>>>>>>>> transform = p:(0.4, 1.3, 0.2) r:(317.9, 89.9, 302.6) s:(1.0, 1.0, 1.0)
>>>>>>>>c IKArmPole.r_end

>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(317.9, 89.9, 302.6) s:(1.0, 1.0, 1.0)
>>>>>>c pelvis

>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(353.1, 179.9, 180.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.Rigidbody

>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>c thigh.l

>>>>>>>> transform = p:(-0.1, 0.1, 0.0) r:(344.4, 4.9, 171.4) s:(1.0, 1.0, 1.0)

>>>>>>>> UnityEngine.Rigidbody

>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>v rotationDrive = UnityEngine.JointDrive

>>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>>c calf.l

>>>>>>>>> transform = p:(0.0, 0.6, 0.0) r:(337.3, 180.3, 185.0) s:(1.0, 1.0, 1.0)

>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>v rotationDrive = UnityEngine.JointDrive

>>>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>>>c foot.l

>>>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(50.0, 179.7, 179.8) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c toe.l

>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(359.0, 89.9, 90.1) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c toe.l_end

>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(359.0, 89.9, 90.1) s:(1.0, 1.0, 1.0)
>>>>>>>c thigh.r

>>>>>>>> transform = p:(0.1, 0.1, 0.0) r:(356.8, 27.6, 192.0) s:(1.0, 1.0, 1.0)

>>>>>>>> UnityEngine.Rigidbody

>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>v rotationDrive = UnityEngine.JointDrive

>>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>>c calf.r

>>>>>>>>> transform = p:(0.0, 0.6, 0.0) r:(332.0, 213.9, 169.7) s:(1.0, 1.0, 1.0)

>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>v rotationDrive = UnityEngine.JointDrive

>>>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>>>c foot.r

>>>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(48.0, 180.5, 163.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c toe.r

>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(359.1, 292.2, 269.9) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c toe.r_end

>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(359.1, 292.2, 269.9) s:(1.0, 1.0, 1.0)
>>>>>>c stomach

>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(2.7, 0.3, 0.4) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.CapsuleCollider

>>>>>>> UnityEngine.Rigidbody

>>>>>>> UnityEngine.CharacterJoint
>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>v rotationDrive = UnityEngine.JointDrive
>>>>>>>c chest

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(2.0, 356.3, 359.8) s:(1.0, 1.0, 1.0)

>>>>>>>> UnityEngine.Rigidbody

>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>v rotationDrive = UnityEngine.JointDrive

>>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>>c Point Light

>>>>>>>>> transform = p:(0.0, 0.2, -0.3) r:(2.0, 356.3, 359.8) s:(1.0, 1.0, 1.0)

>>>>>>>>> UnityEngine.Light

>>>>>>>>> RoR2.FlickerLight
>>>>>>>>>v light = Point Light (UnityEngine.Light)
>>>>>>>>>v sinWaves = Wave[]
>>>>>>>>c clavicle.l

>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(66.7, 56.1, 152.2) s:(1.0, 1.0, 1.0)

>>>>>>>>> UnityEngine.CapsuleCollider

>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>v rotationDrive = UnityEngine.JointDrive
>>>>>>>>>c upper_arm.l

>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(357.7, 15.7, 165.4) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.CapsuleCollider

>>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>>v rotationDrive = UnityEngine.JointDrive
>>>>>>>>>>c lower_arm.l

>>>>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(14.7, 106.0, 177.6) s:(1.0, 1.0, 1.0)

>>>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>>>v rotationDrive = UnityEngine.JointDrive

>>>>>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>>>>>c hand.l

>>>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(355.0, 274.4, 168.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c finger1.1.l

>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(345.3, 294.2, 154.4) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger1.2.l

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(304.0, 39.5, 259.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger1.3.l

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(9.0, 298.4, 336.8) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>>c finger1.3.l_end

>>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(9.0, 298.4, 336.8) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c finger2.1.l

>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(345.5, 288.8, 161.5) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger2.2.l

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(295.2, 29.3, 258.4) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger2.3.l

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(10.4, 287.2, 342.1) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>>c finger2.3.l_end

>>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(10.4, 287.2, 342.1) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c finger3.1.l

>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(339.8, 282.1, 177.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger3.2.l

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(287.5, 52.6, 224.2) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger3.3.l

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(7.3, 278.3, 350.9) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>>c finger3.3.l_end

>>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(7.3, 278.3, 350.9) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c finger4.1.l

>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(333.9, 272.4, 188.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger4.2.l

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(292.8, 79.9, 185.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger4.3.l

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(358.0, 270.0, 358.4) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>>c finger4.3.l_end

>>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(358.0, 270.0, 358.4) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c GripControl.l

>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(70.8, 189.9, 187.0) s:(0.5, 0.5, 0.5)
>>>>>>>>>>>>>c finger1IKTarget.l

>>>>>>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(2.3, 271.8, 166.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger1IKTarget.l_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(2.3, 271.8, 166.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger2IKTarget.l

>>>>>>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(2.3, 271.8, 166.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger2IKTarget.l_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(2.3, 271.8, 166.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger3IKTarget.l

>>>>>>>>>>>>>> transform = p:(0.0, -0.1, 0.0) r:(2.3, 271.8, 166.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger3IKTarget.l_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(2.3, 271.8, 166.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger4IKTarget.l

>>>>>>>>>>>>>> transform = p:(0.0, -0.1, 0.0) r:(2.3, 271.8, 166.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger4IKTarget.l_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(2.3, 271.8, 166.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c thumbIKTarget.l

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.1) r:(2.2, 271.8, 161.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c thumbIKTarget.l_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(2.2, 271.8, 161.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c thumb.1.l

>>>>>>>>>>>>> transform = p:(-0.1, 0.1, 0.0) r:(36.6, 267.6, 159.5) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c thumb.2.l

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(74.7, 142.4, 225.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c thumb.2.l_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(74.7, 142.4, 225.3) s:(1.0, 1.0, 1.0)
>>>>>>>>c clavicle.r

>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(68.1, 246.6, 156.8) s:(1.0, 1.0, 1.0)

>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>v rotationDrive = UnityEngine.JointDrive

>>>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>>>c upper_arm.r

>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(20.1, 353.9, 191.3) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.CapsuleCollider

>>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>>v rotationDrive = UnityEngine.JointDrive
>>>>>>>>>>c lower_arm.r

>>>>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(17.4, 258.9, 195.9) s:(1.0, 1.0, 1.0)

>>>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>>>v rotationDrive = UnityEngine.JointDrive

>>>>>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>>>>>c hand.r

>>>>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(354.4, 79.0, 167.9) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c finger1.1.r

>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(346.5, 70.2, 173.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger1.2.r

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(344.5, 256.4, 181.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger1.3.r

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(304.9, 259.2, 177.2) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>>c finger1.3.r_end

>>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(304.9, 259.2, 177.2) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c finger2.1.r

>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(348.9, 69.6, 174.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger2.2.r

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(346.8, 256.6, 180.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger2.3.r

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(313.5, 259.9, 176.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>>c finger2.3.r_end

>>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(313.5, 259.9, 176.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c finger3.1.r

>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(349.2, 68.6, 169.2) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger3.2.r

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(340.9, 255.0, 181.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger3.3.r

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(302.0, 257.6, 178.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>>c finger3.3.r_end

>>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(302.0, 257.6, 178.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c finger4.1.r

>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(347.1, 71.2, 168.2) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger4.2.r

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(346.2, 257.5, 179.8) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger4.3.r

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(309.7, 261.6, 174.5) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>>c finger4.3.r_end

>>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(309.7, 261.6, 174.5) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c GripControl.r

>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(84.9, 21.4, 32.6) s:(1.1, 1.1, 1.1)
>>>>>>>>>>>>>c finger1IKTarget.r

>>>>>>>>>>>>>> transform = p:(0.0, 0.0, 0.1) r:(2.1, 78.5, 170.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger1IKTarget.r_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(2.1, 78.5, 170.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger2IKTarget.r

>>>>>>>>>>>>>> transform = p:(0.0, 0.0, 0.1) r:(2.1, 78.5, 170.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger2IKTarget.r_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(2.1, 78.5, 170.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger3IKTarget.r

>>>>>>>>>>>>>> transform = p:(0.0, 0.0, 0.1) r:(2.1, 78.5, 170.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger3IKTarget.r_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(2.1, 78.5, 170.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c finger4IKTarget.r

>>>>>>>>>>>>>> transform = p:(0.0, -0.1, 0.1) r:(2.1, 78.5, 170.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c finger4IKTarget.r_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(2.1, 78.5, 170.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c thumbIKTarget.r

>>>>>>>>>>>>>> transform = p:(0.0, 0.0, 0.1) r:(2.0, 78.5, 175.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c thumbIKTarget.r_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(2.0, 78.5, 175.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c thumb.1.r

>>>>>>>>>>>>> transform = p:(0.1, 0.1, 0.0) r:(18.0, 70.4, 184.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c thumb.2.r

>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(343.2, 259.5, 172.6) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c thumb.2.r_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(343.2, 259.5, 172.6) s:(1.0, 1.0, 1.0)
>>>>>>>>c neck

>>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(349.3, 175.9, 0.1) s:(1.0, 1.0, 1.0)

>>>>>>>>> UnityEngine.CapsuleCollider

>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>v rotationDrive = UnityEngine.JointDrive
>>>>>>>>>c head

>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(0.2, 359.9, 359.8) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>>> UnityEngine.CharacterJoint
>>>>>>>>>>v targetRotation = (0.0, 0.0, 0.0, 0.0)
>>>>>>>>>>v targetAngularVelocity = (0.0, 0.0, 0.0)
>>>>>>>>>>v rotationDrive = UnityEngine.JointDrive

>>>>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>>>>c JiggleHair

>>>>>>>>>>> transform = p:(0.0, 0.1, -0.2) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c JiggleHair_end

>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c SwingCenter

>>>>>>>>> transform = p:(0.0, -0.2, 0.1) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>c SwordBase

>>>>>>>>>> transform = p:(-0.4, -0.4, 0.0) r:(75.9, 199.5, 175.0) s:(0.8, 0.8, 0.8)

>>>>>>>>>> UnityEngine.Rigidbody

>>>>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>>>>c Hitbox, Sword

>>>>>>>>>>> transform = p:(0.0, 1.3, 0.0) r:(75.9, 199.5, 175.0) s:(4.8, 9.4, 4.8)

>>>>>>>>>>> RoR2.HitBox
>>>>>>>>>>c Hitbox, Sword Large

>>>>>>>>>>> transform = p:(0.0, 4.5, 0.0) r:(75.9, 199.5, 175.0) s:(7.6, 15.1, 7.6)

>>>>>>>>>>> RoR2.HitBox
>>>>>>>>>>c SwordHandPlacement.l

>>>>>>>>>>> transform = p:(0.0, 0.0, -0.1) r:(356.2, 274.1, 166.5) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c SwordHandPlacement.l_end

>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(356.2, 274.1, 166.5) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c SwordHandPlacement.r

>>>>>>>>>>> transform = p:(0.0, 0.2, -0.1) r:(357.2, 120.7, 193.8) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>c SwordHandPlacement.r_end

>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(357.2, 120.7, 193.8) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c SwordLength.1

>>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(75.9, 199.5, 175.0) s:(1.0, 0.8, 1.0)
>>>>>>>>>>>c SwordLength.2

>>>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(75.9, 199.5, 175.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>c SwordLength.3

>>>>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(75.9, 199.5, 175.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>c SwordLength.4

>>>>>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(75.9, 199.5, 175.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>>>>>c SwordLength.4_end

>>>>>>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(75.9, 199.5, 175.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c SwordRotateControl

>>>>>>>>>>> transform = p:(0.0, 0.3, 0.0) r:(14.0, 24.6, 1.2) s:(1.0, 0.8, 1.0)
>>>>>>>>>>>c SwordRotateControl_end

>>>>>>>>>>>> transform = p:(0.0, 0.1, 0.0) r:(14.0, 24.6, 1.2) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c Point Light

>>>>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(75.9, 199.5, 175.0) s:(1.0, 1.0, 1.0)

>>>>>>>>>>> UnityEngine.Light

>>>>>>>>>>> RoR2.FlickerLight
>>>>>>>>>>>v light = Point Light (UnityEngine.Light)
>>>>>>>>>>>v sinWaves = Wave[]
>>>>>>>>c PreDashEffect

>>>>>>>>> transform = p:(0.0, 0.2, -0.3) r:(17.0, 356.2, 359.8) s:(1.0, 1.0, 1.0)

>>>>>>>>> RoR2.ScaleParticleSystemDuration
>>>>>>>>>v initialDuration = 0.5
>>>>>>>>>v particleSystems = UnityEngine.ParticleSystem[]
>>>>>>>>>c ContractingEnergy

>>>>>>>>>> transform = p:(0.0, 0.0, -1.2) r:(17.0, 356.2, 359.8) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.ParticleSystem

>>>>>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>>>>>c Point Light

>>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(17.0, 356.2, 359.8) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.Light

>>>>>>>>>> LightIntensityCurve
>>>>>>>>>>v curve = UnityEngine.AnimationCurve
>>>>>>>>>>v timeMax = 0.3
>>>>>>>>>>v loop = False
>>>>>>>>>>v randomStart = False
>>>>>>>>>c FireEmission

>>>>>>>>>> transform = p:(0.0, 0.0, 0.1) r:(343.0, 176.2, 180.2) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.ParticleSystem

>>>>>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>>>>>c BrightRing

>>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(343.0, 176.2, 180.2) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.ParticleSystem

>>>>>>>>>> UnityEngine.ParticleSystemRenderer
>>>c MercMesh

>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.SkinnedMeshRenderer
>>>c MercSwordMesh

>>>> transform = p:(-1.1, 1.2, -0.1) r:(270.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.SkinnedMeshRenderer
>>>c TempHurtbox

>>>> transform = p:(0.0, 1.1, 0.0) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.CapsuleCollider

>>>> RoR2.HurtBox
>>>>v healthComponent = MercBody (RoR2.HealthComponent)
>>>>v isBullseye = True
>>>>v damageModifier = Normal
>>>>v teamIndex = None
>>>>v hurtBoxGroup = mdlMerc (RoR2.HurtBoxGroup)
>>>>v indexInGroup = 0
>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>c Hitbox, Assaulter

>>>> transform = p:(0.0, 1.6, 3.4) r:(0.0, 359.9, 0.0) s:(5.9, 5.9, 11.2)

>>>> RoR2.HitBox
>>>c DashCenter

>>>> transform = p:(0.0, 1.1, 0.0) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
>>>c GroundLight1Slash

>>>> transform = p:(0.0, 1.4, 0.0) r:(65.9, 112.0, 276.2) s:(1.0, 1.0, 1.0)
>>>c GroundLight2Slash

>>>> transform = p:(0.0, 1.4, 0.0) r:(293.7, 54.0, 298.2) s:(1.0, 1.0, 1.0)
>>>c GroundLight3Slash

>>>> transform = p:(0.0, 1.7, 0.0) r:(86.9, 116.2, 292.3) s:(1.0, 1.0, 1.0)
>>>c WhirlwindGround

>>>> transform = p:(0.0, 1.0, 0.0) r:(270.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
>>>>c HitBox, Whirlwind

>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 269.9, 90.0) s:(4.0, 7.2, 7.2)

>>>>> RoR2.HitBox
>>>c WhirlwindAir

>>>> transform = p:(0.0, 1.0, 0.0) r:(0.0, 269.9, 90.0) s:(1.0, 1.0, 1.0)
>>>>c HitBox, Whirlwind

>>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 359.9, 0.0) s:(4.0, 7.2, 7.2)

>>>>> RoR2.HitBox
>c CameraPivot

>> transform = p:(0.0, 1.6, 0.0) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
>c AimOrigin

>> transform = p:(0.0, 0.5, 0.0) r:(0.0, 359.9, 0.0) s:(1.0, 1.0, 1.0)
