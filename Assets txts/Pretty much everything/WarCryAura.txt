WarCryAura

> transform = p:(118.4, 6.7, 91.1) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.NetworkedBodyAttachment
>v forceHostAuthority = False

> RoR2.TeamFilter

> RoR2.BuffWard
>v radius = 0
>v interval = 1
>v rangeIndicator = Indicator (UnityEngine.Transform)
>v buffType = WarCryBuff
>v buffDuration = 1
>v floorWard = False
>v expires = True
>v invertTeamFilter = False
>v expireDuration = 0
>v animateRadius = False
>v radiusCoefficientCurve = UnityEngine.AnimationCurve

> UnityEngine.ParticleSystem

> UnityEngine.ParticleSystemRenderer

> AkGameObj
>v isEnvironmentAware = True
>v m_positionOffsetData = AkGameObjPositionOffsetData

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Play_item_proc_warCry
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False

> UnityEngine.Rigidbody
>c Indicator

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c mdlVFXDonut3

>>> transform = p:(0.0, -0.2, 0.0) r:(270.0, 0.0, 0.0) s:(0.5, 0.5, 1.0)

>>> UnityEngine.MeshFilter

>>> UnityEngine.MeshRenderer
>>c IndicatorSphere

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(2.0, 2.0, 2.0)

>>> UnityEngine.MeshFilter

>>> UnityEngine.MeshRenderer
