ImpDeathEffect

> transform = p:(-10.2, -213.3, -167.8) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> RoR2.EffectComponent
>v effectData = 
>v positionAtReferencedTransform = True
>v parentToReferencedTransform = False
>v applyScale = False

> RoR2.VFXAttributes
>v vfxPriority = Always
>v vfxIntensity = Medium
>v optionalLights = UnityEngine.Light[]
>v secondaryParticleSystem = UnityEngine.ParticleSystem[]

> DestroyOnParticleEnd

> RoR2.AlignToNormal
>v maxDistance = 1
>v offsetDistance = 0.5
>v changePositionOnly = False
>c Decal

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(6.5, 6.5, 6.5)

>> UnityEngine.MeshRenderer

>> UnityEngine.MeshFilter

>> ThreeEyedGames.Decal
>>v RenderMode = Deferred
>>v Material = matImpDecal (UnityEngine.Material)
>>v Fade = 1
>>v LimitTo = 
>>v DrawAlbedo = True
>>v UseLightProbes = True
>>v DrawNormalAndGloss = True
>>v HighQualityBlending = False

>> RoR2.AnimateShaderAlpha
>>v alphaCurve = UnityEngine.AnimationCurve
>>v timeMax = 2
>>v decal = Decal (ThreeEyedGames.Decal)
>>v destroyOnEnd = True
>>v disableOnEnd = False
>>v time = 0
>c Dash

>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Distortion (2)

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Billboard

>> transform = p:(0.0, 0.3, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c NoiseTrails

>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Ring

>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(0.1, 0.1, 0.1)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Point Light

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.Light

>> LightIntensityCurve
>>v curve = UnityEngine.AnimationCurve
>>v timeMax = 1.5
>>v loop = False
>>v randomStart = False

>> RoR2.FlickerLight
>>v light = Point Light (UnityEngine.Light)
>>v sinWaves = Wave[]
