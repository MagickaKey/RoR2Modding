VagrantSpawnEffect

> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(4.0, 4.0, 4.0)

> RoR2.ShakeEmitter
>v shakeOnStart = True
>v wave = Wave
>v duration = 2
>v radius = 100
>v scaleShakeRadiusWithLocalScale = False
>v amplitudeTimeDecay = True

> RoR2.PostProcessDuration
>v ppVolume = PP (UnityEngine.Rendering.PostProcessing.PostProcessVolume)
>v ppWeightCurve = UnityEngine.AnimationCurve
>v maxDuration = 2
>v destroyOnEnd = False

> RoR2.EffectComponent
>v effectData = 
>v positionAtReferencedTransform = True
>v parentToReferencedTransform = False
>v applyScale = True

> RoR2.VFXAttributes
>v vfxPriority = Always
>v vfxIntensity = High
>v optionalLights = UnityEngine.Light[]
>v secondaryParticleSystem = UnityEngine.ParticleSystem[]

> RoR2.DestroyOnTimer
>v duration = 3
>v resetAgeOnDisable = False
>c LongLifeNoiseTrails, Bright

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Flash, White

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Flash, Red

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Dash, Bright

>> transform = p:(0.0, 0.0, -0.2) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c DashRings

>> transform = p:(0.0, 0.0, -0.2) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Point Light

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.Light

>> LightIntensityCurve
>>v curve = UnityEngine.AnimationCurve
>>v timeMax = 2
>>v loop = False
>>v randomStart = False

>> RoR2.FlickerLight
>>v light = Point Light (UnityEngine.Light)
>>v sinWaves = Wave[]
>c PP

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.Rendering.PostProcessing.PostProcessVolume
>>v sharedProfile = ppLocalVagrantExplosion (UnityEngine.Rendering.PostProcessing.PostProcessProfile)
>>v isGlobal = False
>>v blendDistance = 10
>>v weight = 0.455
>>v priority = 10

>> UnityEngine.SphereCollider
