HermitCrabBody

> transform = p:(-339.0, -385.1, -944.4) r:(0.0, 359.9, 4.9) s:(1.0, 1.0, 1.0)

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.CharacterMotor
>v instancesList = System.Collections.Generic.List`1[RoR2.CharacterMotor]
>v walkSpeedPenaltyCoefficient = 1
>v characterDirection = 
>v muteWalkMotion = False
>v mass = 100
>v airControl = 0.25
>v disableAirControlUntilCollision = False
>v generateParametersOnAwake = True
>v slipStartAngle = 70
>v slipEndAngle = 55
>v jumpCount = 0
>v netIsGrounded = False
>v netGroundNormal = (0.0, 0.0, 0.0)
>v velocity = (0.0, 0.0, 0.0)
>v rootMotion = (0.0, 0.0, 0.0)

> RoR2.InputBankTest
>v lookPitch = 0
>v lookYaw = 0
>v moveVector = (0.0, 0.0, 0.0)
>v skill1 = RoR2.InputBankTest+ButtonState
>v skill2 = RoR2.InputBankTest+ButtonState
>v skill3 = RoR2.InputBankTest+ButtonState
>v skill4 = RoR2.InputBankTest+ButtonState
>v interact = RoR2.InputBankTest+ButtonState
>v jump = RoR2.InputBankTest+ButtonState
>v sprint = RoR2.InputBankTest+ButtonState
>v activateEquipment = RoR2.InputBankTest+ButtonState
>v ping = RoR2.InputBankTest+ButtonState
>v emoteRequest = -1

> RoR2.CharacterBody
>v bodyIndex = 37
>v baseNameToken = HERMIT_CRAB_BODY_NAME
>v subtitleNameToken = 
>v pendingTonicAfflictionCount = 0
>v bodyFlags = None
>v readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.CharacterBody]
>v rootMotionInMainState = False
>v mainRootSpeed = 0
>v baseMaxHealth = 100
>v baseRegen = 0.6
>v baseMaxShield = 0
>v baseMoveSpeed = 10
>v baseAcceleration = 30
>v baseJumpPower = 8
>v baseDamage = 4
>v baseAttackSpeed = 1
>v baseCrit = 0
>v baseArmor = 0
>v baseJumpCount = 1
>v autoCalculateLevelStats = True
>v levelMaxHealth = 30
>v levelRegen = 0.12
>v levelMaxShield = 0
>v levelMoveSpeed = 0
>v levelJumpPower = 0
>v levelDamage = 0.8
>v levelAttackSpeed = 0
>v levelCrit = 0
>v levelArmor = 0
>v killCount = 0
>v wasLucky = False
>v spreadBloomDecayTime = 1
>v spreadBloomCurve = UnityEngine.AnimationCurve
>v crosshairPrefab = StraightBracketCrosshair (UnityEngine.GameObject)
>v hideCrosshair = False
>v aimOriginTransform = AimOrigin (UnityEngine.Transform)
>v hullClassification = Human
>v portraitIcon = HermitCrabBody (UnityEngine.Texture2D)
>v isChampion = False
>v currentVehicle = 
>v preferredPodPrefab = 

> RoR2.CameraTargetParams
>v cameraParams = ccpStandard (RoR2.CharacterCameraParams)
>v cameraPivotTransform = 
>v aimMode = Standard
>v recoil = (0.0, 0.0)
>v idealLocalCameraPos = (0.0, 0.0, -4.7)
>v fovOverride = -1
>v dontRaycastToPivot = False

> RoR2.ModelLocator
>v modelTransform = mdlHermitCrab (UnityEngine.Transform)
>v modelBaseTransform = ModelBase (UnityEngine.Transform)
>v dontReleaseModelOnDeath = False
>v autoUpdateModelTransform = True
>v dontDetatchFromParent = False
>v noCorpse = False
>v normalizeToFloor = False
>v preserveModel = False

> RoR2.CharacterDirection
>v moveVector = (0.0, 0.0, 0.0)
>v targetTransform = ModelBase (UnityEngine.Transform)
>v overrideAnimatorForwardTransform = 
>v rootMotionAccumulator = 
>v modelAnimator = 
>v driveFromRootRotation = False
>v turnSpeed = 180

> RoR2.EntityStateMachine
>v customName = Body
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.SkillLocator
>v primary = HermitCrabBody (RoR2.GenericSkill)
>v secondary = 
>v utility = 
>v special = 
>v passiveSkill = RoR2.SkillLocator+PassiveSkill

> RoR2.TeamComponent
>v hideAllyCardDisplay = False

> RoR2.HealthComponent
>v health = 100
>v shield = 0
>v barrier = 0
>v body = 
>v dontShowHealthbar = False
>v globalDeathEventChanceCoefficient = 1
>v medkitActivationDelay = 1.1
>v frozenExecuteThreshold = 0.3

> RoR2.GenericSkill
>v skillName = Burrow/Mortar
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 3
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = HermitCrabBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Skill
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = 
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.Interactor
>v maxInteractionDistance = 3

> RoR2.InteractionDriver
>v highlightInteractor = True
>v interactableOverride = 

> RoR2.SetStateOnHurt
>v hitThreshold = 0.5
>v targetStateMachine = HermitCrabBody (RoR2.EntityStateMachine)
>v idleStateMachine = RoR2.EntityStateMachine[]
>v hurtState = EntityStates.SerializableEntityStateType
>v canBeHitStunned = True
>v canBeStunned = True
>v canBeFrozen = True

> RoR2.CharacterDeathBehavior
>v deathStateMachine = HermitCrabBody (RoR2.EntityStateMachine)
>v deathState = EntityStates.SerializableEntityStateType
>v idleStateMachine = RoR2.EntityStateMachine[]

> RoR2.Networking.CharacterNetworkTransform
>v positionTransmitInterval = 0.05
>v lastPositionTransmitTime = -Infinity
>v interpolationFactor = 3
>v newestNetSnapshot = RoR2.Networking.CharacterNetworkTransform+Snapshot
>v debugDuplicatePositions = False
>v debugSnapshotReceived = False

> RoR2.NetworkStateMachine

> RoR2.EquipmentSlot
>v equipmentActivateString = Play_UI_equipment_activate

> RoR2.SfxLocator
>v deathSound = Play_hermitCrab_death
>v barkSound = Play_hermitCrab_idle_VO
>v openSound = 
>v landingSound = 
>v fallDamageSound = 

> RoR2.DeathRewards
>v expReward = 0
>v logUnlockableName = Logs.HermitCrabBody.0
>v bossPickup = RoR2.SerializablePickupIndex

> UnityEngine.Rigidbody

> UnityEngine.CapsuleCollider

> KinematicCharacterController.KinematicCharacterMotor
>v CharacterController = HermitCrabBody (RoR2.CharacterMotor)
>v Capsule = HermitCrabBody (UnityEngine.CapsuleCollider)
>v Rigidbody = HermitCrabBody (UnityEngine.Rigidbody)
>v DetectDiscreteCollisions = False
>v GroundDetectionExtraDistance = 0
>v MaxStepHeight = 0.2
>v MinRequiredStepDepth = 0.1
>v MaxStableSlopeAngle = 55
>v MaxStableDistanceFromLedge = 0.5
>v PreventSnappingOnLedges = False
>v MaxStableDenivelationAngle = 55
>v RigidbodyInteractionType = None
>v PreserveAttachedRigidbodyMomentum = True
>v HasPlanarConstraint = False
>v PlanarConstraintAxis = (0.0, 0.0, 1.0)
>v StepHandling = Standard
>v LedgeHandling = True
>v InteractiveRigidbodyHandling = True
>v SafeMovement = False
>v GroundingStatus = KinematicCharacterController.CharacterGroundingReport
>v LastGroundingStatus = KinematicCharacterController.CharacterTransientGroundingReport
>v CollidableLayers = UnityEngine.LayerMask
>v MaxHitsBudget = 16
>v MaxCollisionBudget = 16
>v MaxGroundingSweepIterations = 2
>v MaxMovementSweepIterations = 6
>v MaxSteppingSweepIterations = 3
>v MaxRigidbodyOverlapsCount = 16
>v MaxDiscreteCollisionIterations = 3
>v CollisionOffset = 0.001
>v GroundProbeReboundDistance = 0.02
>v MinimumGroundProbingDistance = 0.005
>v GroundProbingBackstepDistance = 0.1
>v SweepProbingBackstepDistance = 0.002
>v SecondaryProbesVertical = 0.02
>v SecondaryProbesHorizontal = 0.001
>v MinVelocityMagnitude = 0.01
>v SteppingForwardDistance = 0.03
>v MinDistanceForLedge = 0.05
>v CorrelationForVerticalObstruction = 0.01
>v ExtraSteppingForwardDistance = 0.01
>v ExtraStepHeightPadding = 0.01
>c ModelBase

>> transform = p:(-0.1, -1.1, 0.0) r:(4.4, 243.9, 357.8) s:(1.4, 1.4, 1.4)
>>c mdlHermitCrab

>>> transform = p:(0.0, -0.2, 0.0) r:(4.4, 243.9, 357.8) s:(1.0, 1.0, 1.0)

>>> UnityEngine.Animator

>>> ChildLocator

>>> RoR2.CharacterModel
>>>v body = HermitCrabBody (RoR2.CharacterBody)
>>>v itemDisplayRuleSet = idrsHermitCrab (RoR2.ItemDisplayRuleSet)
>>>v autoPopulateLightInfos = True
>>>v autoPopulateParticleSystemInfos = True
>>>v baseParticleSystemInfos = RoR2.CharacterModel+ParticleSystemInfo[]
>>>v baseRendererInfos = RoR2.CharacterModel+RendererInfo[]
>>>v baseLightInfos = RoR2.CharacterModel+LightInfo[]
>>>v invisibilityCount = 0
>>>v temporaryOverlays = System.Collections.Generic.List`1[RoR2.TemporaryOverlay]
>>>v revealedMaterial = matRevealedEffect (UnityEngine.Material)
>>>v cloakedMaterial = matCloakedEffect (UnityEngine.Material)
>>>v ghostMaterial = matGhostEffect (UnityEngine.Material)
>>>v bellBuffMaterial = matBellBuff (UnityEngine.Material)
>>>v wolfhatMaterial = matWolfhatOverlay (UnityEngine.Material)
>>>v energyShieldMaterial = matEnergyShield (UnityEngine.Material)
>>>v fullCritMaterial = matFullCrit (UnityEngine.Material)
>>>v beetleJuiceMaterial = matBeetleJuice (UnityEngine.Material)
>>>v brittleMaterial = matBrittle (UnityEngine.Material)
>>>v clayGooMaterial = matClayGooDebuff (UnityEngine.Material)
>>>v slow80Material = matSlow80Debuff (UnityEngine.Material)
>>>v immuneMaterial = matImmune (UnityEngine.Material)
>>>v elitePoisonOverlayMaterial = matElitePoisonOverlay (UnityEngine.Material)
>>>v elitePoisonParticleReplacementMaterial = matElitePoisonParticleReplacement (UnityEngine.Material)
>>>v weakMaterial = matWeakOverlay (UnityEngine.Material)

>>> RoR2.HurtBoxGroup
>>>v hurtBoxes = RoR2.HurtBox[]
>>>v mainHurtBox = TempHurtbox (RoR2.HurtBox)
>>>v bullseyeCount = 1

>>> RoR2.AnimationEvents
>>>v soundCenter = 
>>>c HermitCrabArmature

>>>> transform = p:(0.0, 0.0, 0.0) r:(274.9, 269.9, 334.0) s:(1.0, 1.0, 1.0)
>>>>c ROOT

>>>>> transform = p:(0.0, 0.0, 0.0) r:(4.9, 279.0, 0.8) s:(1.0, 1.0, 1.0)
>>>>>c Base

>>>>>> transform = p:(0.0, 0.9, 0.0) r:(10.3, 279.2, 4.6) s:(1.0, 1.0, 1.0)
>>>>>>c Muzzle

>>>>>>> transform = p:(0.0, 1.9, 0.0) r:(4.4, 243.9, 357.8) s:(1.0, 1.0, 1.0)
>>>>>>c leg1.thigh.l

>>>>>>> transform = p:(-0.2, 0.0, 0.0) r:(357.5, 265.4, 142.3) s:(1.0, 1.0, 1.0)
>>>>>>>c leg1.calf.l

>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(6.4, 271.5, 108.7) s:(1.0, 1.0, 1.0)
>>>>>>>>c leg1.foot.l

>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(14.8, 267.4, 261.2) s:(1.0, 1.0, 1.0)
>>>>>>>>>c leg1.foot.l_end

>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(14.8, 267.4, 261.2) s:(1.0, 1.0, 1.0)
>>>>>>c leg1.thigh.r

>>>>>>> transform = p:(0.1, 0.0, 0.2) r:(5.5, 226.2, 220.4) s:(1.0, 1.0, 1.0)
>>>>>>>c leg1.calf.r

>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(14.7, 220.7, 257.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c leg1.foot.r

>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(20.5, 230.7, 126.8) s:(1.0, 1.0, 1.0)
>>>>>>>>>c leg1.foot.r_end

>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(20.5, 230.7, 126.8) s:(1.0, 1.0, 1.0)
>>>>>>c leg2.thigh.l

>>>>>>> transform = p:(-0.2, 0.0, -0.1) r:(4.3, 243.2, 121.3) s:(1.0, 1.0, 1.0)
>>>>>>>c leg2.calf.l

>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(4.3, 243.2, 82.6) s:(1.0, 1.0, 1.0)
>>>>>>>>c leg2.foot.l

>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(7.6, 235.7, 203.3) s:(1.0, 1.0, 1.0)
>>>>>>>>>c leg2.foot.l_end

>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(7.6, 235.7, 203.3) s:(1.0, 1.0, 1.0)
>>>>>>c leg2.thigh.r

>>>>>>> transform = p:(0.2, 0.0, 0.1) r:(4.7, 241.6, 232.1) s:(1.0, 1.0, 1.0)
>>>>>>>c leg2.calf.r

>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(4.7, 241.6, 269.6) s:(1.0, 1.0, 1.0)
>>>>>>>>c leg2.foot.r

>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(10.4, 247.4, 135.7) s:(1.0, 1.0, 1.0)
>>>>>>>>>c leg2.foot.r_end

>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(10.4, 247.4, 135.7) s:(1.0, 1.0, 1.0)
>>>>>>c leg3.thigh.l

>>>>>>> transform = p:(-0.1, 0.0, -0.2) r:(8.3, 236.1, 121.4) s:(1.0, 1.0, 1.0)
>>>>>>>c leg3.calf.l

>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(357.8, 234.1, 82.3) s:(1.0, 1.0, 1.0)
>>>>>>>>c leg3.foot.l

>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(4.0, 231.4, 186.5) s:(1.0, 1.0, 1.0)
>>>>>>>>>c leg3.foot.l_end

>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(4.0, 231.4, 186.5) s:(1.0, 1.0, 1.0)
>>>>>>c leg3.thigh.r

>>>>>>> transform = p:(0.2, 0.0, 0.0) r:(3.7, 248.7, 234.7) s:(1.0, 1.0, 1.0)
>>>>>>>c leg3.calf.r

>>>>>>>> transform = p:(0.0, 0.4, 0.0) r:(353.3, 251.8, 268.9) s:(1.0, 1.0, 1.0)
>>>>>>>>c leg3.foot.r

>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(1.1, 252.6, 116.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>c leg3.foot.r_end

>>>>>>>>>> transform = p:(0.0, 0.5, 0.0) r:(1.1, 252.6, 116.0) s:(1.0, 1.0, 1.0)
>>>>>>c Pincer.back

>>>>>>> transform = p:(0.1, 0.0, -0.2) r:(313.0, 61.7, 183.2) s:(1.0, 1.0, 1.0)
>>>>>>>c Pincer.back_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(313.0, 61.7, 183.2) s:(1.0, 1.0, 1.0)
>>>>>>c Pincer.front

>>>>>>> transform = p:(-0.1, -0.2, 0.2) r:(11.7, 64.5, 182.2) s:(1.0, 1.0, 1.0)
>>>>>>>c Pincer.front_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(11.7, 64.5, 182.2) s:(1.0, 1.0, 1.0)
>>>>>c leg1.IKTarget.l

>>>>>> transform = p:(-0.4, 0.3, 0.0) r:(357.6, 28.8, 184.3) s:(1.0, 1.0, 1.0)
>>>>>>c leg1.IKPole.l

>>>>>>> transform = p:(-0.2, -1.0, -0.2) r:(2.4, 208.8, 355.7) s:(1.0, 1.0, 1.0)
>>>>>>>c leg1.IKPole.l_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(2.4, 208.8, 355.7) s:(1.0, 1.0, 1.0)
>>>>>c leg1.IKTarget.r

>>>>>> transform = p:(0.3, 0.2, 0.5) r:(355.1, 99.0, 179.2) s:(1.0, 1.0, 1.0)
>>>>>>c leg1.IKPole.r

>>>>>>> transform = p:(0.0, -1.1, -0.1) r:(4.9, 279.0, 0.8) s:(1.0, 1.0, 1.0)
>>>>>>>c leg1.IKPole.r_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(4.9, 279.0, 0.8) s:(1.0, 1.0, 1.0)
>>>>>c leg2.IKTarget.l

>>>>>> transform = p:(-0.7, 0.3, -0.5) r:(357.6, 28.8, 184.3) s:(1.0, 1.0, 1.0)
>>>>>>c leg2.IKPole.l

>>>>>>> transform = p:(0.1, -1.0, 0.1) r:(2.4, 208.8, 355.7) s:(1.0, 1.0, 1.0)
>>>>>>>c leg2.IKPole.l_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(2.4, 208.8, 355.7) s:(1.0, 1.0, 1.0)
>>>>>c leg2.IKTarget.r

>>>>>> transform = p:(0.5, 0.3, 0.4) r:(355.1, 99.0, 179.2) s:(1.0, 1.0, 1.0)
>>>>>>c leg2.IKPole.r

>>>>>>> transform = p:(-0.1, -1.0, 0.1) r:(4.9, 279.0, 0.8) s:(1.0, 1.0, 1.0)
>>>>>>>c leg2.IKPole.r_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(4.9, 279.0, 0.8) s:(1.0, 1.0, 1.0)
>>>>>c leg3.IKTarget.l

>>>>>> transform = p:(-0.6, 0.2, -0.7) r:(357.6, 28.8, 184.3) s:(1.0, 1.0, 1.0)
>>>>>>c leg3.IKPole.l

>>>>>>> transform = p:(0.1, -1.0, 0.0) r:(2.4, 208.8, 355.7) s:(1.0, 1.0, 1.0)
>>>>>>>c leg3.IKPole.l_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(2.4, 208.8, 355.7) s:(1.0, 1.0, 1.0)
>>>>>c leg3.IKTarget.r

>>>>>> transform = p:(0.5, 0.4, 0.2) r:(355.1, 99.0, 179.2) s:(1.0, 1.0, 1.0)
>>>>>>c leg3.IKPole.r

>>>>>>> transform = p:(0.3, -1.0, -0.1) r:(4.9, 279.0, 0.8) s:(1.0, 1.0, 1.0)
>>>>>>>c leg3.IKPole.r_end

>>>>>>>> transform = p:(0.0, 0.2, 0.0) r:(4.9, 279.0, 0.8) s:(1.0, 1.0, 1.0)
>>>c HermitCrabMesh

>>>> transform = p:(0.0, 0.0, 0.0) r:(274.9, 269.9, 334.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.SkinnedMeshRenderer
>>>c TempHurtbox

>>>> transform = p:(0.0, 1.7, 0.0) r:(4.4, 243.9, 357.8) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.CapsuleCollider

>>>> RoR2.HurtBox
>>>>v healthComponent = HermitCrabBody (RoR2.HealthComponent)
>>>>v isBullseye = True
>>>>v damageModifier = Normal
>>>>v teamIndex = None
>>>>v hurtBoxGroup = mdlHermitCrab (RoR2.HurtBoxGroup)
>>>>v indexInGroup = 0
>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]

>>>> SurfaceDefProvider
>>>>v surfaceDef = sdHermitCrab (SurfaceDef)
>>>c BurrowCenter

>>>> transform = p:(0.0, 0.0, 0.0) r:(4.4, 243.9, 357.8) s:(1.0, 1.0, 1.0)
>>>c AimAssist

>>>> transform = p:(0.0, 0.0, 0.0) r:(4.4, 243.9, 357.8) s:(1.0, 1.0, 1.0)

>>>> RoR2.AimAssistTarget
>>>>v point0 = Muzzle (UnityEngine.Transform)
>>>>v point1 = Base (UnityEngine.Transform)
>>>>v assistScale = 1
>>>>v healthComponent = HermitCrabBody (RoR2.HealthComponent)
>>>>v teamComponent = HermitCrabBody (RoR2.TeamComponent)
>>>>v instancesList = System.Collections.Generic.List`1[RoR2.AimAssistTarget]
>>>>v debugAimAssistVisualCoefficient = RoR2.ConVar.FloatConVar
>c CameraPivot

>> transform = p:(0.0, 1.9, 0.0) r:(0.0, 359.9, 4.9) s:(1.0, 1.0, 1.0)
>c AimOrigin

>> transform = p:(0.0, 1.9, 0.0) r:(0.0, 359.9, 4.9) s:(1.0, 1.0, 1.0)
