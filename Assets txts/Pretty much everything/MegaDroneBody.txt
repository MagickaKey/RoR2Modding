MegaDroneBody

> transform = p:(-34.6, 49.3, -77.1) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.CharacterBody
>v bodyIndex = 46
>v baseNameToken = DRONE_MEGA_BODY_NAME
>v subtitleNameToken = 
>v pendingTonicAfflictionCount = 0
>v bodyFlags = None
>v readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.CharacterBody]
>v rootMotionInMainState = False
>v mainRootSpeed = 0
>v baseMaxHealth = 900
>v baseRegen = 2
>v baseMaxShield = 0
>v baseMoveSpeed = 20
>v baseAcceleration = 20
>v baseJumpPower = 0
>v baseDamage = 14
>v baseAttackSpeed = 1
>v baseCrit = 0
>v baseArmor = 0
>v baseJumpCount = 1
>v autoCalculateLevelStats = True
>v levelMaxHealth = 270
>v levelRegen = 0.4
>v levelMaxShield = 0
>v levelMoveSpeed = 0
>v levelJumpPower = 0
>v levelDamage = 2.8
>v levelAttackSpeed = 0
>v levelCrit = 0
>v levelArmor = 0
>v killCount = 0
>v wasLucky = False
>v spreadBloomDecayTime = 0.45
>v spreadBloomCurve = UnityEngine.AnimationCurve
>v crosshairPrefab = GlaiveCrosshair (UnityEngine.GameObject)
>v hideCrosshair = False
>v aimOriginTransform = AimOrigin (UnityEngine.Transform)
>v hullClassification = BeetleQueen
>v portraitIcon = MegaDroneBody (UnityEngine.Texture2D)
>v isChampion = False
>v currentVehicle = 
>v preferredPodPrefab = 

> RoR2.HealthComponent
>v health = 100
>v shield = 0
>v barrier = 0
>v body = 
>v dontShowHealthbar = False
>v globalDeathEventChanceCoefficient = 1
>v medkitActivationDelay = 1.1
>v frozenExecuteThreshold = 0.3

> RoR2.InputBankTest
>v lookPitch = 0
>v lookYaw = 0
>v moveVector = (0.0, 0.0, 0.0)
>v skill1 = RoR2.InputBankTest+ButtonState
>v skill2 = RoR2.InputBankTest+ButtonState
>v skill3 = RoR2.InputBankTest+ButtonState
>v skill4 = RoR2.InputBankTest+ButtonState
>v interact = RoR2.InputBankTest+ButtonState
>v jump = RoR2.InputBankTest+ButtonState
>v sprint = RoR2.InputBankTest+ButtonState
>v activateEquipment = RoR2.InputBankTest+ButtonState
>v ping = RoR2.InputBankTest+ButtonState
>v emoteRequest = -1

> RoR2.CameraTargetParams
>v cameraParams = ccpStandardHuge (RoR2.CharacterCameraParams)
>v cameraPivotTransform = 
>v aimMode = Standard
>v recoil = (0.0, 0.0)
>v idealLocalCameraPos = (0.0, 0.0, 0.0)
>v fovOverride = -1
>v dontRaycastToPivot = False

> RoR2.Networking.CharacterNetworkTransform
>v positionTransmitInterval = 0.1
>v lastPositionTransmitTime = -Infinity
>v interpolationFactor = 2
>v newestNetSnapshot = RoR2.Networking.CharacterNetworkTransform+Snapshot
>v debugDuplicatePositions = False
>v debugSnapshotReceived = False

> RoR2.RigidbodyDirection
>v aimDirection = (1.0, 1.0, 1.0)
>v rigid = MegaDroneBody (UnityEngine.Rigidbody)
>v angularVelocityPID = MegaDroneBody (QuaternionPID)
>v torquePID = MegaDroneBody (VectorPID)
>v freezeXRotation = True
>v freezeYRotation = False
>v freezeZRotation = True
>v animatorXCycle = turnXCycle
>v animatorYCycle = 
>v animatorZCycle = 
>v animatorTorqueScale = 0.01

> RoR2.RigidbodyMotor
>v moveVector = (0.0, 0.0, 0.0)
>v rigid = MegaDroneBody (UnityEngine.Rigidbody)
>v forcePID = MegaDroneBody (VectorPID)
>v centerOfMassOffset = (0.0, 0.0, 0.0)
>v animatorForward = forward
>v animatorRight = right
>v animatorUp = up
>v enableOverrideMoveVectorInLocalSpace = False
>v canTakeImpactDamage = True
>v overrideMoveVectorInLocalSpace = (0.0, 0.0, 0.0)

> QuaternionPID
>v customName = Angular Velocity PID
>v PID = (5.0, 0.1, 0.0)
>v inputQuat = (0.0, 0.0, 0.0, 1.0)
>v targetQuat = (0.0, 0.0, 0.0, 1.0)
>v outputVector = (0.0, 0.0, 0.0)
>v gain = 0.5

> VectorPID
>v customName = torquePID
>v PID = (5.0, 0.1, 0.0)
>v inputVector = (0.0, 0.0, 0.0)
>v targetVector = (0.0, 0.0, 0.0)
>v outputVector = (0.0, 0.0, 0.0)
>v isAngle = True
>v gain = 0.5

> VectorPID
>v customName = Force PID
>v PID = (3.0, 0.0, 0.0)
>v inputVector = (0.0, 0.0, 0.0)
>v targetVector = (0.0, 0.0, 0.0)
>v outputVector = (0.0, 0.0, 0.0)
>v isAngle = False
>v gain = 1

> RoR2.TeamComponent
>v hideAllyCardDisplay = False

> RoR2.EntityStateMachine
>v customName = Body
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.EntityStateMachine
>v customName = WeaponGun
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.EntityStateMachine
>v customName = WeaponRocket
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.SkillLocator
>v primary = MegaDroneBody (RoR2.GenericSkill)
>v secondary = MegaDroneBody (RoR2.GenericSkill)
>v utility = 
>v special = 
>v passiveSkill = RoR2.SkillLocator+PassiveSkill

> RoR2.GenericSkill
>v skillName = Gun
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 4
>v baseMaxStock = 1
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = MegaDroneBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Skill
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = 
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.GenericSkill
>v skillName = Rocket
>v skillNameToken = 
>v skillDescriptionToken = 
>v baseRechargeInterval = 6
>v baseMaxStock = 2
>v rechargeStock = 1
>v isBullets = False
>v shootDelay = 0.3
>v beginSkillCooldownOnSkillEnd = False
>v stateMachine = MegaDroneBody (RoR2.EntityStateMachine)
>v activationState = EntityStates.SerializableEntityStateType
>v interruptPriority = Any
>v isCombatSkill = True
>v noSprint = True
>v canceledFromSprinting = False
>v mustKeyPress = False
>v icon = 
>v requiredStock = 1
>v stockToConsume = 1
>v hasExecutedSuccessfully = False

> RoR2.Interactor
>v maxInteractionDistance = 3

> RoR2.InteractionDriver
>v highlightInteractor = False
>v interactableOverride = 

> UnityEngine.Rigidbody

> RoR2.ModelLocator
>v modelTransform = mdlMegaDrone (UnityEngine.Transform)
>v modelBaseTransform = Model Base (UnityEngine.Transform)
>v dontReleaseModelOnDeath = False
>v autoUpdateModelTransform = True
>v dontDetatchFromParent = False
>v noCorpse = False
>v normalizeToFloor = False
>v preserveModel = False

> RoR2.NetworkStateMachine

> UnityEngine.CapsuleCollider

> RoR2.CharacterDeathBehavior
>v deathStateMachine = MegaDroneBody (RoR2.EntityStateMachine)
>v deathState = EntityStates.SerializableEntityStateType
>v idleStateMachine = RoR2.EntityStateMachine[]

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Play_drone_active_loop
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Play_drone_repair
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Stop_drone_active_loop
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False

> RoR2.BodyAnimatorSmoothingParameters
>v smoothingParameters = RoR2.BodyAnimatorSmoothingParameters+SmoothingParameters
>v defaultParameters = RoR2.BodyAnimatorSmoothingParameters+SmoothingParameters
>c Model Base

>> transform = p:(0.0, -0.7, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c mdlMegaDrone

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.Animator

>>> RoR2.CharacterModel
>>>v body = MegaDroneBody (RoR2.CharacterBody)
>>>v itemDisplayRuleSet = idrsMegaDroneBody (RoR2.ItemDisplayRuleSet)
>>>v autoPopulateLightInfos = True
>>>v autoPopulateParticleSystemInfos = True
>>>v baseParticleSystemInfos = RoR2.CharacterModel+ParticleSystemInfo[]
>>>v baseRendererInfos = RoR2.CharacterModel+RendererInfo[]
>>>v baseLightInfos = RoR2.CharacterModel+LightInfo[]
>>>v invisibilityCount = 0
>>>v temporaryOverlays = System.Collections.Generic.List`1[RoR2.TemporaryOverlay]
>>>v revealedMaterial = matRevealedEffect (UnityEngine.Material)
>>>v cloakedMaterial = matCloakedEffect (UnityEngine.Material)
>>>v ghostMaterial = matGhostEffect (UnityEngine.Material)
>>>v bellBuffMaterial = matBellBuff (UnityEngine.Material)
>>>v wolfhatMaterial = matWolfhatOverlay (UnityEngine.Material)
>>>v energyShieldMaterial = matEnergyShield (UnityEngine.Material)
>>>v fullCritMaterial = matFullCrit (UnityEngine.Material)
>>>v beetleJuiceMaterial = matBeetleJuice (UnityEngine.Material)
>>>v brittleMaterial = matBrittle (UnityEngine.Material)
>>>v clayGooMaterial = matClayGooDebuff (UnityEngine.Material)
>>>v slow80Material = matSlow80Debuff (UnityEngine.Material)
>>>v immuneMaterial = matImmune (UnityEngine.Material)
>>>v elitePoisonOverlayMaterial = matElitePoisonOverlay (UnityEngine.Material)
>>>v elitePoisonParticleReplacementMaterial = matElitePoisonParticleReplacement (UnityEngine.Material)
>>>v weakMaterial = matWeakOverlay (UnityEngine.Material)

>>> RoR2.AimAnimator
>>>v inputBank = MegaDroneBody (RoR2.InputBankTest)
>>>v directionComponent = 
>>>v pitchRangeMin = -30
>>>v pitchRangeMax = 30
>>>v yawRangeMin = -180
>>>v yawRangeMax = 180
>>>v pitchGiveupRange = 20
>>>v yawGiveupRange = 20
>>>v giveupDuration = 4
>>>v raisedApproachSpeed = 180
>>>v loweredApproachSpeed = 180
>>>v smoothTime = 0.4
>>>v fullYaw = True
>>>v aimType = Direct
>>>v enableAimWeight = False

>>> RoR2.HurtBoxGroup
>>>v hurtBoxes = RoR2.HurtBox[]
>>>v mainHurtBox = TempHurtbox (RoR2.HurtBox)
>>>v bullseyeCount = 1

>>> ChildLocator

>>> RoR2.RagdollController
>>>v bones = UnityEngine.Transform[]
>>>v componentsToDisableOnRagdoll = UnityEngine.MonoBehaviour[]

>>> RoR2.ExplodeRigidbodiesOnStart
>>>v bodies = UnityEngine.Rigidbody[]
>>>v force = 100
>>>v explosionRadius = 300
>>>c MegaDroneArmature

>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c Base

>>>>> transform = p:(0.0, 0.7, 0.0) r:(90.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>> UnityEngine.Rigidbody

>>>>> UnityEngine.BoxCollider

>>>>> RoR2.RigidbodyStickOnImpact
>>>>>v stickSoundString = Play_drone_deathpt2
>>>>>v stickEffectPrefab = PodGroundImpact (UnityEngine.GameObject)
>>>>>v minimumRelativeVelocityMagnitude = 12
>>>>>v embedDistanceCurve = UnityEngine.AnimationCurve
>>>>>c Head

>>>>>> transform = p:(0.0, 0.7, 2.0) r:(0.0, 90.0, 103.8) s:(1.0, 1.0, 1.0)

>>>>>> UnityEngine.Rigidbody

>>>>>> UnityEngine.SphereCollider
>>>>>>c Eye

>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 90.0, 103.8) s:(1.0, 1.0, 1.0)
>>>>>>>c Eye_end

>>>>>>>> transform = p:(0.0, 1.8, 0.0) r:(0.0, 90.0, 103.8) s:(1.0, 1.0, 1.0)
>>>>>>>c Spot Light

>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(13.8, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>>> UnityEngine.Light
>>>>>c BlinkyForwardRedLight

>>>>>> transform = p:(0.0, 2.4, -0.8) r:(90.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>> UnityEngine.ParticleSystem

>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>c Rotor

>>>>>> transform = p:(0.0, 0.7, -0.6) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c WingRoll.l

>>>>>>> transform = p:(-0.4, 1.2, 0.0) r:(270.0, 90.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>c WingPitch.l

>>>>>>>> transform = p:(0.0, 1.0, 0.6) r:(270.0, 90.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>>> UnityEngine.Rigidbody

>>>>>>>> UnityEngine.BoxCollider

>>>>>>>> RoR2.RigidbodyStickOnImpact
>>>>>>>>v stickSoundString = Play_drone_deathpt2
>>>>>>>>v stickEffectPrefab = PodGroundImpact (UnityEngine.GameObject)
>>>>>>>>v minimumRelativeVelocityMagnitude = 12
>>>>>>>>v embedDistanceCurve = UnityEngine.AnimationCurve
>>>>>>>>c WingPitch.l_end

>>>>>>>>> transform = p:(0.0, 5.2, 0.0) r:(270.0, 90.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>c JetCenter

>>>>>>>>>> transform = p:(0.0, -0.5, -1.5) r:(270.0, 90.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c ExhaustLight

>>>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 90.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>>>>>> UnityEngine.Light

>>>>>>>>>>> RoR2.FlickerLight
>>>>>>>>>>>v light = ExhaustLight (UnityEngine.Light)
>>>>>>>>>>>v sinWaves = Wave[]
>>>>>>>>>>c Flames

>>>>>>>>>>> transform = p:(0.0, 0.0, -0.4) r:(90.0, 90.0, 0.0) s:(0.3, 0.3, 4.0)

>>>>>>>>>>> UnityEngine.MeshFilter

>>>>>>>>>>> UnityEngine.MeshRenderer
>>>>>>>>>>c Distortion

>>>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(90.0, 90.0, 0.0) s:(0.5, 0.5, 0.4)

>>>>>>>>>>> UnityEngine.ParticleSystem

>>>>>>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>>>>>c GreenFlare

>>>>>>>>>> transform = p:(-2.1, -0.4, 0.7) r:(270.0, 90.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.ParticleSystem

>>>>>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>>>>>c BlinkyBackLight

>>>>>>>>>> transform = p:(2.0, -0.4, 0.7) r:(270.0, 90.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.ParticleSystem

>>>>>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>>c WingRoll.r

>>>>>>> transform = p:(0.4, 1.2, 0.0) r:(270.0, 270.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>c WingPitch.r

>>>>>>>> transform = p:(0.0, 1.0, 0.6) r:(270.0, 270.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>>> UnityEngine.BoxCollider

>>>>>>>> UnityEngine.Rigidbody

>>>>>>>> RoR2.RigidbodyStickOnImpact
>>>>>>>>v stickSoundString = Play_drone_deathpt2
>>>>>>>>v stickEffectPrefab = PodGroundImpact (UnityEngine.GameObject)
>>>>>>>>v minimumRelativeVelocityMagnitude = 12
>>>>>>>>v embedDistanceCurve = UnityEngine.AnimationCurve
>>>>>>>>c WingPitch.r_end

>>>>>>>>> transform = p:(0.0, 5.2, 0.0) r:(270.0, 270.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>c JetCenter

>>>>>>>>>> transform = p:(0.0, -0.5, -1.5) r:(270.0, 270.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>>>c ExhaustLight

>>>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 270.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>>>>>> UnityEngine.Light

>>>>>>>>>>> RoR2.FlickerLight
>>>>>>>>>>>v light = ExhaustLight (UnityEngine.Light)
>>>>>>>>>>>v sinWaves = Wave[]
>>>>>>>>>>c Flames

>>>>>>>>>>> transform = p:(0.0, 0.0, -0.4) r:(90.0, 270.0, 0.0) s:(0.3, 0.3, 4.0)

>>>>>>>>>>> UnityEngine.MeshFilter

>>>>>>>>>>> UnityEngine.MeshRenderer
>>>>>>>>>>c Distortion

>>>>>>>>>>> transform = p:(0.0, 0.0, 0.0) r:(90.0, 270.0, 0.0) s:(0.5, 0.5, 0.4)

>>>>>>>>>>> UnityEngine.ParticleSystem

>>>>>>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>>>>>c BlinkyBackLight

>>>>>>>>>> transform = p:(-2.0, -0.4, 0.7) r:(270.0, 270.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.ParticleSystem

>>>>>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>>>>>c RedFlare

>>>>>>>>>> transform = p:(2.1, -0.4, 0.7) r:(270.0, 270.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>>>>> UnityEngine.ParticleSystem

>>>>>>>>>> UnityEngine.ParticleSystemRenderer
>>>>>c WeaponRing

>>>>>> transform = p:(0.0, 0.7, 0.0) r:(90.0, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c GatlingBase.l

>>>>>>> transform = p:(2.1, 1.6, 2.7) r:(90.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.Rigidbody

>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>c GatlingBarrel.l

>>>>>>>> transform = p:(0.0, 1.0, 0.0) r:(270.0, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c GatlingBarrel.l_end

>>>>>>>>> transform = p:(0.0, 2.1, 0.0) r:(270.0, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>c GatlingBase.r

>>>>>>> transform = p:(-2.1, 1.6, 2.7) r:(90.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>>>> UnityEngine.Rigidbody

>>>>>>> UnityEngine.CapsuleCollider
>>>>>>>c GatlingBarrel.r

>>>>>>>> transform = p:(0.0, 1.0, 0.0) r:(270.0, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>>>>>c GatlingBarrel.r_end

>>>>>>>>> transform = p:(0.0, 2.1, 0.0) r:(270.0, 180.0, 0.0) s:(1.0, 1.0, 1.0)
>>>>c TempHurtbox

>>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>>> UnityEngine.SphereCollider

>>>>> RoR2.HurtBox
>>>>>v healthComponent = MegaDroneBody (RoR2.HealthComponent)
>>>>>v isBullseye = True
>>>>>v damageModifier = Normal
>>>>>v teamIndex = None
>>>>>v hurtBoxGroup = mdlMegaDrone (RoR2.HurtBoxGroup)
>>>>>v indexInGroup = 0
>>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>c MegaDroneMesh

>>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.SkinnedMeshRenderer
>>>c Origin

>>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c AimOrigin

>>> transform = p:(0.0, 1.7, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
