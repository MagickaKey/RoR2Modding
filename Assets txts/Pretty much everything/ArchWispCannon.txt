ArchWispCannon

> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(0.1, 0.1, 1.0)

> UnityEngine.MeshFilter

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.Projectile.ProjectileController
>v ghostPrefab = ArchWispCannonGhost (UnityEngine.GameObject)
>v ghost = 
>v isPrediction = False
>v allowPrediction = True
>v predictionId = 0
>v owner = 
>v procChainMask = RoR2.ProcChainMask
>v procCoefficient = 1
>v target = 
>v authorityEffect = AuthorityEffect (UnityEngine.GameObject)
>v predictionEffect = PredictionEffect (UnityEngine.GameObject)

> UnityEngine.Rigidbody

> RoR2.Projectile.ProjectileNetworkTransform
>v positionTransmitInterval = 0.03333334
>v interpolationFactor = 1
>v allowClientsideCollision = False

> RoR2.Projectile.ProjectileSimple
>v velocity = 76
>v lifetime = 5
>v updateAfterFiring = False
>v enableVelocityOverLifetime = False
>v velocityOverLifetime = UnityEngine.AnimationCurve

> UnityEngine.SphereCollider

> RoR2.Projectile.ProjectileDamage
>v damage = 0
>v crit = False
>v force = 0
>v damageColorIndex = Default
>v damageType = Generic

> RoR2.TeamFilter

> RoR2.Projectile.ProjectileImpactExplosion
>v impactEffect = OmniExplosionVFXBellDeath (UnityEngine.GameObject)
>v explosionSoundString = Play_magmaWorm_M1_explo
>v lifetimeExpiredSoundString = 
>v offsetForLifetimeExpiredSound = 0
>v destroyOnEnemy = True
>v destroyOnWorld = True
>v timerAfterImpact = False
>v falloffModel = Linear
>v lifetime = 3
>v lifetimeAfterImpact = 1
>v lifetimeRandomOffset = 0
>v blastRadius = 3
>v blastDamageCoefficient = 0.3
>v blastProcCoefficient = 1
>v bonusBlastForce = (0.0, 350.0, 0.0)
>v fireChildren = True
>v childrenProjectilePrefab = ArchWispGroundCannon (UnityEngine.GameObject)
>v childrenCount = 1
>v childrenDamageCoefficient = 1
>v minAngleOffset = (0.0, 0.0, 1.0)
>v maxAngleOffset = (0.0, 0.0, 1.0)
>v transformSpace = Local
>v projectileHealthComponent = 
>c AuthorityEffect

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(20.0, 20.0, 1.0)

>> UnityEngine.MeshFilter

>> UnityEngine.MeshRenderer
>c PredictionEffect

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(20.0, 20.0, 1.0)

>> UnityEngine.MeshFilter

>> UnityEngine.MeshRenderer
