TimeCrystalBody

> transform = p:(-178.3, 10.5, -28.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.SkillLocator
>v primary = 
>v secondary = 
>v utility = 
>v special = 
>v passiveSkill = RoR2.SkillLocator+PassiveSkill

> RoR2.TeamComponent
>v hideAllyCardDisplay = False

> RoR2.CharacterBody
>v bodyIndex = 58
>v baseNameToken = 
>v subtitleNameToken = 
>v pendingTonicAfflictionCount = 0
>v bodyFlags = IgnoreFallDamage, Masterless, ImmuneToGoo
>v readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.CharacterBody]
>v rootMotionInMainState = False
>v mainRootSpeed = 0
>v baseMaxHealth = 200
>v baseRegen = 0
>v baseMaxShield = 0
>v baseMoveSpeed = 0
>v baseAcceleration = 0
>v baseJumpPower = 0
>v baseDamage = 15
>v baseAttackSpeed = 0
>v baseCrit = 0
>v baseArmor = 0
>v baseJumpCount = 1
>v autoCalculateLevelStats = False
>v levelMaxHealth = 0
>v levelRegen = 0
>v levelMaxShield = 0
>v levelMoveSpeed = 0
>v levelJumpPower = 0
>v levelDamage = 0
>v levelAttackSpeed = 0
>v levelCrit = 0
>v levelArmor = 0
>v killCount = 0
>v wasLucky = False
>v spreadBloomDecayTime = 0.45
>v spreadBloomCurve = UnityEngine.AnimationCurve
>v crosshairPrefab = StandardCrosshair (UnityEngine.GameObject)
>v hideCrosshair = False
>v aimOriginTransform = 
>v hullClassification = Human
>v portraitIcon = 
>v isChampion = False
>v currentVehicle = 
>v preferredPodPrefab = 

> RoR2.HealthComponent
>v health = 200
>v shield = 0
>v barrier = 0
>v body = 
>v dontShowHealthbar = False
>v globalDeathEventChanceCoefficient = 1
>v medkitActivationDelay = 1.1
>v frozenExecuteThreshold = 0.3

> RoR2.EntityStateMachine
>v customName = 
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1

> RoR2.CharacterDeathBehavior
>v deathStateMachine = TimeCrystalBody (RoR2.EntityStateMachine)
>v deathState = EntityStates.SerializableEntityStateType
>v idleStateMachine = RoR2.EntityStateMachine[]

> RoR2.NetworkStateMachine

> UnityEngine.Networking.NetworkTransform

> RoR2.DeathRewards
>v expReward = 0
>v logUnlockableName = 
>v bossPickup = RoR2.SerializablePickupIndex

> RoR2.ModelLocator
>v modelTransform = Mesh (UnityEngine.Transform)
>v modelBaseTransform = ModelBase (UnityEngine.Transform)
>v dontReleaseModelOnDeath = True
>v autoUpdateModelTransform = False
>v dontDetatchFromParent = True
>v noCorpse = False
>v normalizeToFloor = False
>v preserveModel = False
>c ModelBase

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c Swirls

>>> transform = p:(0.0, 1.0, 0.0) r:(270.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.ParticleSystem

>>> UnityEngine.ParticleSystemRenderer
>>c Mesh

>>> transform = p:(0.2, 0.5, 0.0) r:(337.3, 18.4, 264.4) s:(1.0, 1.0, 1.0)

>>> UnityEngine.MeshFilter

>>> UnityEngine.MeshRenderer

>>> RoR2.HurtBoxGroup
>>>v hurtBoxes = RoR2.HurtBox[]
>>>v mainHurtBox = Hurtbox (RoR2.HurtBox)
>>>v bullseyeCount = 1
>>>c Hurtbox

>>>> transform = p:(0.0, 0.0, 0.0) r:(337.3, 18.4, 264.4) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.SphereCollider

>>>> RoR2.HurtBox
>>>>v healthComponent = TimeCrystalBody (RoR2.HealthComponent)
>>>>v isBullseye = True
>>>>v damageModifier = Normal
>>>>v teamIndex = None
>>>>v hurtBoxGroup = Mesh (RoR2.HurtBoxGroup)
>>>>v indexInGroup = 0
>>>>v readOnlyBullseyesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.HurtBox]
>>>c Beam

>>>> transform = p:(0.5, -0.2, -0.3) r:(0.0, 180.0, 180.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.ParticleSystem

>>>> UnityEngine.ParticleSystemRenderer
>>>c Light

>>>> transform = p:(-1.6, -0.4, 0.6) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.Light

>>>> RoR2.FlickerLight
>>>>v light = Light (UnityEngine.Light)
>>>>v sinWaves = Wave[]
>>c WarningRadius

>>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 0.0, 0.0) s:(4.5, 4.5, 9.1)

>>> UnityEngine.MeshFilter

>>> UnityEngine.MeshRenderer
>c RefRadius

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>> UnityEngine.SphereCollider
