NPCPositionIndicator

> transform = p:(-0.1, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(0.1, 0.1, 0.1)

> RoR2.PositionIndicator
>v targetTransform = 
>v insideViewObject = InsideFrameObject (UnityEngine.GameObject)
>v outsideViewObject = OutsideFrameArrow (UnityEngine.GameObject)
>v alwaysVisibleObject = CriticallyHurtIcon (UnityEngine.GameObject)
>v shouldRotateOutsideViewObject = True
>v outsideViewRotationOffset = 90

> RoR2.UI.Nameplate
>v label = 
>v aliveObject = AliveIcon (UnityEngine.GameObject)
>v deadObject = DeadIcon (UnityEngine.GameObject)
>v criticallyHurtSpriteRenderer = CriticallyHurtIcon (UnityEngine.SpriteRenderer)
>v coloredSprites = UnityEngine.SpriteRenderer[]
>v baseColor = RGBA(0.478, 0.875, 0.890, 1.000)
>v combatColor = RGBA(0.779, 0.747, 0.309, 1.000)
>c CriticallyHurtIcon

>> transform = p:(0.0, 0.3, 0.0) r:(0.0, 0.0, 0.0) s:(0.1, 0.1, 0.1)

>> UnityEngine.SpriteRenderer
>c DeadIcon

>> transform = p:(0.0, 0.2, 0.0) r:(0.0, 0.0, 0.0) s:(0.5, 0.5, 0.5)

>> UnityEngine.SpriteRenderer
>c InsideFrameObject

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c TextMeshPro

>>> UnityEngine.RectTransform

>>> UnityEngine.MeshFilter

>>> UnityEngine.MeshRenderer

>>> UnityEngine.CanvasRenderer

>>> TMPro.TextMeshPro
>>c AliveIcon

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(0.5, 0.5, 0.5)

>>> UnityEngine.SpriteRenderer
>c OutsideFrameArrow

>> transform = p:(0.0, 0.3, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c Sprite

>>> transform = p:(0.0, -0.2, 0.0) r:(0.0, 0.0, 0.0) s:(0.5, 0.5, 0.5)

>>> UnityEngine.SpriteRenderer
