ImpBossDeathEffect

> transform = p:(-139.5, 23.2, -64.6) r:(0.0, 359.9, 0.0) s:(2.0, 2.0, 2.0)

> RoR2.EffectComponent
>v effectData = 
>v positionAtReferencedTransform = True
>v parentToReferencedTransform = True
>v applyScale = False

> RoR2.VFXAttributes
>v vfxPriority = Always
>v vfxIntensity = High
>v optionalLights = UnityEngine.Light[]
>v secondaryParticleSystem = UnityEngine.ParticleSystem[]

> DestroyOnParticleEnd

> RoR2.ShakeEmitter
>v shakeOnStart = True
>v wave = Wave
>v duration = 6
>v radius = 100
>v scaleShakeRadiusWithLocalScale = False
>v amplitudeTimeDecay = False
>c NoiseTrails

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 359.9, 0.0) s:(1.8, 1.8, 1.8)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Dash

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 359.9, 0.0) s:(1.8, 1.8, 1.8)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Distortion

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 359.9, 0.0) s:(1.8, 1.8, 1.8)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Flash, Red

>> transform = p:(0.0, 0.0, 0.1) r:(0.0, 359.9, 0.0) s:(1.8, 1.8, 1.8)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c DashRings

>> transform = p:(0.0, 0.0, -0.2) r:(0.0, 359.9, 0.0) s:(1.8, 1.8, 1.8)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c Ring

>> transform = p:(0.0, 0.0, 0.0) r:(270.0, 359.9, 0.0) s:(0.1, 0.1, 0.1)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
>c PP

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 359.9, 0.0) s:(1.8, 1.8, 1.8)

>> RoR2.PostProcessDuration
>>v ppVolume = PP (UnityEngine.Rendering.PostProcessing.PostProcessVolume)
>>v ppWeightCurve = UnityEngine.AnimationCurve
>>v maxDuration = 4
>>v destroyOnEnd = True

>> UnityEngine.Rendering.PostProcessing.PostProcessVolume
>>v sharedProfile = ppLocalImpBoss (UnityEngine.Rendering.PostProcessing.PostProcessProfile)
>>v isGlobal = False
>>v blendDistance = 20
>>v weight = 1
>>v priority = 6

>> UnityEngine.SphereCollider
>c Point Light

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 359.9, 0.0) s:(1.8, 1.8, 1.8)

>> UnityEngine.Light

>> LightIntensityCurve
>>v curve = UnityEngine.AnimationCurve
>>v timeMax = 4
>>v loop = False
>>v randomStart = False

>> RoR2.FlickerLight
>>v light = Point Light (UnityEngine.Light)
>>v sinWaves = Wave[]
>c SwirlySmoke

>> transform = p:(0.0, 0.0, 6.1) r:(0.0, 359.9, 0.0) s:(1.8, 1.8, 1.8)

>> UnityEngine.ParticleSystem

>> UnityEngine.ParticleSystemRenderer
