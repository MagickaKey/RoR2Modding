HuntressArrowRain

> transform = p:(97.3, -160.1, -140.7) r:(0.0, 0.0, 0.0) s:(15.0, 15.0, 15.0)

> UnityEngine.MeshFilter

> UnityEngine.Networking.NetworkIdentity
>v clientAuthorityCallback = 

> RoR2.Projectile.ProjectileController
>v ghostPrefab = 
>v ghost = 
>v isPrediction = False
>v allowPrediction = True
>v predictionId = 0
>v owner = 
>v procChainMask = RoR2.ProcChainMask
>v procCoefficient = 1
>v target = 
>v authorityEffect = 
>v predictionEffect = 

> RoR2.Projectile.ProjectileDamage
>v damage = 0
>v crit = False
>v force = 0
>v damageColorIndex = Default
>v damageType = SlowOnHit

> RoR2.TeamFilter

> RoR2.HitBoxGroup
>v groupName = 
>v hitBoxes = RoR2.HitBox[]

> RoR2.Projectile.ProjectileDotZone
>v damageCoefficient = 0.5
>v impactEffect = OmniImpactVFXHuntress (UnityEngine.GameObject)
>v forceVector = (0.0, 0.0, 0.0)
>v overlapProcCoefficient = 0.2
>v fireFrequency = 20
>v resetFrequency = 3
>v lifetime = 6
>v onBegin = UnityEngine.Events.UnityEvent UnityEngine.Events.UnityEvent
>v onEnd = UnityEngine.Events.UnityEvent UnityEngine.Events.UnityEvent

> RoR2.DetachParticleOnDestroyAndEndEmission
>v particleSystem = ArrowsFalling (UnityEngine.ParticleSystem)

> RoR2.DetachParticleOnDestroyAndEndEmission
>v particleSystem = ImpaledArrow (UnityEngine.ParticleSystem)

> AkGameObj
>v isEnvironmentAware = True
>v m_positionOffsetData = AkGameObjPositionOffsetData

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Play_huntress_R_rain_loop
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Stop_huntress_R_rain_loop
>v m_callbackData = 
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v triggerList = System.Collections.Generic.List`1[System.Int32]
>v useOtherObject = False

> UnityEngine.Rigidbody
>c FX

>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)
>>c RadiusIndicator

>>> transform = p:(0.0, 0.0, 0.0) r:(90.0, 0.0, 0.0) s:(0.3, 0.3, 1.1)

>>> UnityEngine.MeshFilter

>>> UnityEngine.MeshRenderer
>>c ArrowsFalling

>>> transform = p:(0.0, 1.5, 0.0) r:(90.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.ParticleSystem

>>> UnityEngine.ParticleSystemRenderer
>>c Impacts

>>> transform = p:(0.0, 0.0, 0.0) r:(0.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.ParticleSystem

>>> UnityEngine.ParticleSystemRenderer
>>c Hitbox

>>> transform = p:(0.0, 0.4, 0.0) r:(0.0, 0.0, 0.0) s:(0.9, 1.0, 0.9)

>>> RoR2.HitBox
>>c Hitbox

>>> transform = p:(0.0, 0.4, 0.0) r:(0.0, 330.0, 0.0) s:(0.9, 1.0, 0.9)

>>> RoR2.HitBox
>>c ImpaledArrow

>>> transform = p:(0.0, 0.0, 0.0) r:(90.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.ParticleSystem

>>> UnityEngine.ParticleSystemRenderer
>>c ImpactFlashes

>>> transform = p:(0.0, 0.0, 0.0) r:(90.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.ParticleSystem

>>> UnityEngine.ParticleSystemRenderer
>>>c Point Light

>>>> transform = p:(0.0, 0.0, 0.0) r:(90.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>>> UnityEngine.Light
>>c ImpactDust

>>> transform = p:(0.0, 0.0, 0.0) r:(90.0, 0.0, 0.0) s:(1.0, 1.0, 1.0)

>>> UnityEngine.ParticleSystem

>>> UnityEngine.ParticleSystemRenderer
